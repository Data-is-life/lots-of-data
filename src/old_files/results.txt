{'mean_fit_time': array([1.52637005e-01, 6.92098379e-01, 1.21778117e+00, 1.08506509e-01,
       9.01726007e-01, 1.22775408e+00, 1.63544314e-01, 7.66869477e-01,
       1.56748234e+00, 1.64733580e-01, 5.93901328e-01, 1.28303272e+00,
       1.44903013e-01, 5.28529201e-01, 1.24464117e+00, 8.66006442e-02,
       6.19617973e-01, 1.24780992e+00, 9.12946633e-02, 5.03100531e-01,
       1.04495713e+00, 1.66965689e-01, 6.23393263e-01, 1.14456838e+00,
       1.45415885e-01, 6.41581842e-01, 1.16400971e+00, 1.26022066e-01,
       6.61429099e-01, 1.30635684e+00, 1.34375129e-01, 7.07984311e-01,
       1.35146931e+00, 1.26170227e-01, 5.64572709e-01, 1.22099543e+00,
       1.28918852e-01, 5.62383584e-01, 1.21816822e+00, 6.70726640e-02,
       5.92133863e-01, 1.11603430e+00, 4.63042259e-02, 3.54675838e-01,
       8.12350682e-01, 6.29202298e-02, 3.03948845e-01, 5.86484637e-01,
       9.28207806e-03, 4.36966079e-02, 8.37649958e-02, 1.13287653e-02,
       4.29535934e-02, 8.25413295e-02, 1.06913022e-02, 3.86775562e-02,
       8.06044170e-02, 1.08541421e-02, 4.12248543e-02, 8.10606139e-02,
       9.23051153e-03, 4.21817984e-02, 7.79978888e-02, 1.20078836e-02,
       4.84434196e-02, 8.80750929e-02, 9.40946170e-03, 3.74543667e-02,
       7.38084657e-02, 9.26995277e-03, 4.32101318e-02, 7.90420600e-02,
       8.11498506e-03, 3.42750209e-02, 6.39044557e-02, 1.04883398e-02,
       3.58169079e-02, 6.90437726e-02, 1.02304390e-02, 3.52005618e-02,
       6.64501190e-02, 7.37180029e-03, 3.38611603e-02, 6.89456803e-02,
       8.47108024e-03, 3.83469718e-02, 7.53782817e-02, 7.98685210e-03,
       3.61487525e-02, 7.75745596e-02, 7.55858421e-03, 3.30463137e-02,
       6.83261326e-02, 8.38991574e-03, 3.44330924e-02, 6.65087359e-02,
       2.81429291e-02, 1.27702066e-01, 2.40752799e-01, 2.83545426e-02,
       1.20903628e-01, 2.36446108e-01, 2.40842274e-02, 1.37789454e-01,
       2.51751321e-01, 2.94368267e-02, 1.43931593e-01, 3.32926205e-01,
       1.94613252e-02, 9.59529536e-02, 1.99331624e-01, 2.22911494e-02,
       1.14092418e-01, 2.42841891e-01, 2.92053563e-02, 1.48164102e-01,
       2.58939300e-01, 3.24620860e-02, 1.47533178e-01, 2.86575113e-01,
       2.14305265e-02, 8.36144175e-02, 1.64695842e-01, 2.13046415e-02,
       1.05431250e-01, 2.01457262e-01, 2.42497921e-02, 1.25347887e-01,
       2.53351552e-01, 2.27520125e-02, 1.46566766e-01, 2.88520677e-01,
       1.29218442e-02, 8.82966518e-02, 1.67684793e-01, 1.82645321e-02,
       1.04130813e-01, 2.08549500e-01, 2.41002015e-02, 1.26472882e-01,
       2.46934925e-01, 3.15371581e-02, 1.43591881e-01, 2.93081863e-01,
       2.08319255e-02, 9.98679229e-02, 1.98414768e-01, 1.57157694e-02,
       1.04480607e-01, 1.97983061e-01, 2.00651033e-02, 1.07668604e-01,
       2.20746619e-01, 1.70609610e-02, 1.11704418e-01, 2.27854218e-01,
       1.60703659e-02, 1.01789985e-01, 1.86506237e-01, 2.01858793e-02,
       1.07489722e-01, 2.06156799e-01, 1.76570075e-02, 1.09981162e-01,
       2.23780904e-01, 1.61425046e-02, 1.13891772e-01, 2.31573820e-01,
       1.43828733e-02, 1.00934710e-01, 1.90012796e-01, 1.70462472e-02,
       9.03857776e-02, 1.99786357e-01, 1.66134153e-02, 1.03917020e-01,
       2.10373163e-01, 1.59454346e-02, 1.10684122e-01, 2.20042740e-01,
       1.42670359e-02, 9.07903399e-02, 1.95570878e-01, 1.63846697e-02,
       1.05485167e-01, 1.93795136e-01, 1.93195002e-02, 1.08207839e-01,
       2.21152851e-01, 1.60205705e-02, 1.10441855e-01, 2.11011989e-01,
       2.55889153e+00, 1.42969699e+01, 3.02534441e+01, 3.43589640e+00,
       2.17209664e+01, 4.51116509e+01, 5.60999761e+00, 3.15994407e+01,
       6.22735700e+01, 6.90359753e+00, 3.62044707e+01, 7.47817052e+01,
       3.32431218e+00, 1.74362839e+01, 3.01996736e+01, 4.97195642e+00,
       2.44015449e+01, 5.05877242e+01, 6.24194516e+00, 3.16111063e+01,
       6.88592705e+01, 7.81952136e+00, 4.00446937e+01, 8.27054718e+01,
       2.11248827e+00, 1.78213309e+01, 3.46976118e+01, 4.57427464e+00,
       2.86105921e+01, 5.81360755e+01, 6.87918230e+00, 4.04449159e+01,
       8.23730653e+01, 9.51186272e+00, 5.32399600e+01, 1.09418788e+02,
       3.02082399e+00, 1.89045701e+01, 3.63780580e+01, 6.77039909e+00,
       3.31711323e+01, 6.53810677e+01, 9.38620962e+00, 4.69200768e+01,
       9.23040488e+01, 1.09379979e+01, 5.91094916e+01, 1.21638050e+02,
       5.12208530e-01, 2.64342298e+00, 5.77063278e+00, 7.64567580e-01,
       4.00180425e+00, 8.04847683e+00, 1.14540785e+00, 4.69231227e+00,
       9.83415822e+00, 1.15964968e+00, 5.71640464e+00, 1.08338055e+01,
       8.49165916e-01, 3.39788904e+00, 6.74567679e+00, 1.12767240e+00,
       4.32318391e+00, 9.08338911e+00, 1.19030683e+00, 5.53571691e+00,
       1.09780146e+01, 1.18771447e+00, 6.29782435e+00, 1.25854180e+01,
       4.88044194e-01, 3.66763377e+00, 6.91824389e+00, 6.92845855e-01,
       4.17605063e+00, 8.34787025e+00, 8.27931064e-01, 4.85108921e+00,
       9.79147438e+00, 1.00126740e+00, 5.56362438e+00, 1.11528237e+01,
       5.48900740e-01, 3.56888941e+00, 6.93691111e+00, 8.78856148e-01,
       4.44987508e+00, 8.85159472e+00, 9.98155049e-01, 5.31120607e+00,
       1.05237018e+01, 9.60313899e-01, 5.96907353e+00, 1.19040212e+01,
       7.34349898e-01, 4.35235712e+00, 8.68055419e+00, 7.35505138e-01,
       4.70853771e+00, 9.44536063e+00, 8.53797742e-01, 5.07286423e+00,
       1.01845663e+01, 7.71184070e-01, 5.44013476e+00, 1.08909161e+01,
       6.92052841e-01, 4.37386077e+00, 8.71375809e+00, 7.55622932e-01,
       4.76198735e+00, 9.50707694e+00, 8.18081720e-01, 5.16380021e+00,
       1.03090780e+01, 9.61151600e-01, 5.39741342e+00, 1.10505350e+01,
       7.56416934e-01, 4.50633052e+00, 9.02901265e+00, 7.79192959e-01,
       5.03535867e+00, 1.00808880e+01, 9.43314518e-01, 5.56166281e+00,
       1.11666212e+01, 1.04394470e+00, 6.13760979e+00, 1.22709072e+01,
       7.13584900e-01, 4.54041311e+00, 9.04558185e+00, 8.17280906e-01,
       5.11604565e+00, 1.02329690e+01, 9.15270056e-01, 5.72447835e+00,
       1.14548156e+01, 1.10012051e+00, 6.33132672e+00, 1.22596780e+01]), 'std_fit_time': array([2.64864838e-02, 1.51926829e-01, 3.13151494e-01, 5.62884122e-03,
       5.51613720e-02, 2.14579357e-01, 4.16011386e-02, 2.15112232e-01,
       3.27621075e-01, 5.81702799e-02, 1.46265862e-01, 3.67469402e-01,
       3.40331603e-02, 1.16629048e-01, 3.18287401e-01, 1.49254490e-02,
       1.68135647e-01, 2.79942430e-01, 1.30942527e-02, 1.54890699e-01,
       2.89308516e-01, 3.18045788e-02, 2.50607969e-01, 3.04048368e-01,
       3.76814413e-02, 1.52195984e-01, 2.43229549e-01, 3.78971461e-02,
       1.78020882e-01, 3.05366257e-01, 3.01898325e-02, 1.89629336e-01,
       4.01126947e-01, 2.57708579e-02, 1.39390137e-01, 2.97508851e-01,
       3.33006983e-02, 1.33800426e-01, 3.05797963e-01, 7.71748767e-03,
       1.23281618e-01, 2.20745696e-01, 1.21419362e-02, 1.39074111e-01,
       2.10544956e-01, 1.92943203e-02, 9.55658978e-02, 3.04129920e-01,
       1.59989295e-03, 1.19964715e-02, 2.62686176e-02, 2.92439923e-03,
       1.46408479e-02, 2.30792112e-02, 1.24483908e-03, 9.06249638e-03,
       2.02789497e-02, 2.46837847e-03, 1.18111548e-02, 1.56443091e-02,
       2.72179352e-03, 1.26666590e-02, 2.52465797e-02, 1.48898866e-03,
       8.89624156e-03, 2.00313273e-02, 1.89404914e-03, 9.23052599e-03,
       1.79250864e-02, 1.54056320e-03, 9.90217814e-03, 2.00174688e-02,
       9.48044446e-04, 7.66899921e-03, 1.70221418e-02, 9.84520900e-04,
       7.84408550e-03, 1.84465593e-02, 1.12298406e-03, 7.64287740e-03,
       1.51898664e-02, 1.59733467e-03, 6.72123536e-03, 1.48160183e-02,
       1.87472438e-03, 8.16468595e-03, 1.46937415e-02, 1.94512633e-03,
       8.64960790e-03, 1.31048085e-02, 1.12115088e-03, 6.47143304e-03,
       1.42573849e-02, 1.03698990e-03, 7.66421342e-03, 1.37272866e-02,
       5.11662270e-03, 2.96051700e-03, 2.04550213e-02, 4.20644912e-03,
       2.94913133e-02, 5.86543359e-02, 6.90388485e-03, 3.57785560e-02,
       7.01096525e-02, 8.11880218e-03, 4.11099684e-02, 7.63705040e-02,
       3.42738722e-03, 2.12393178e-02, 4.02047534e-02, 4.98275063e-03,
       2.86223135e-02, 5.00377846e-02, 6.09158220e-03, 2.65961801e-02,
       6.89892304e-02, 7.56910795e-03, 4.56394110e-02, 8.40893657e-02,
       1.08323589e-03, 2.01980642e-02, 3.86215511e-02, 4.93578830e-03,
       2.40638307e-02, 4.74034005e-02, 6.74445128e-03, 3.20226504e-02,
       6.18503629e-02, 6.01532650e-03, 3.92575936e-02, 7.50560375e-02,
       5.21628054e-04, 1.66966360e-02, 3.92241499e-02, 5.02908315e-03,
       2.26407863e-02, 5.17133442e-02, 6.57223725e-03, 3.27582055e-02,
       5.30693077e-02, 7.24521549e-03, 3.61181486e-02, 7.34125224e-02,
       4.04687156e-03, 2.29858907e-02, 4.68048694e-02, 7.61964909e-04,
       2.18223025e-02, 4.02747110e-02, 3.93257390e-03, 2.52968996e-02,
       5.07860784e-02, 8.51349328e-04, 2.60998514e-02, 5.47938643e-02,
       3.30893596e-03, 2.32499297e-02, 4.35327375e-02, 3.81382084e-03,
       2.25654627e-02, 4.86578119e-02, 2.99049851e-03, 2.38042770e-02,
       5.18597048e-02, 1.85465612e-04, 2.65927548e-02, 5.74039678e-02,
       1.21579117e-03, 1.44341122e-02, 3.29171253e-02, 3.59081911e-03,
       2.06006492e-02, 4.57068684e-02, 2.90327662e-03, 2.38837662e-02,
       5.05107408e-02, 6.41231240e-04, 2.30187522e-02, 5.38556732e-02,
       7.71432291e-04, 2.15746038e-02, 4.33830657e-02, 2.73927961e-03,
       2.89716679e-02, 5.13393013e-02, 3.81919469e-03, 2.48989606e-02,
       5.57197729e-02, 6.39294925e-04, 2.35796205e-02, 4.75124810e-02,
       5.84015206e-01, 2.97015504e+00, 4.89535704e+00, 7.53065897e-01,
       4.30370138e+00, 6.87854494e+00, 1.10190618e+00, 3.89193742e+00,
       9.89182660e+00, 1.48093898e+00, 7.62305993e+00, 1.48781080e+01,
       7.69812827e-01, 2.42870697e+00, 6.98570493e+00, 1.10166496e+00,
       4.93831268e+00, 9.20507699e+00, 1.38189947e+00, 7.04230050e+00,
       1.19536913e+01, 1.76077644e+00, 7.81285397e+00, 1.65594930e+01,
       1.92936635e-02, 3.43103217e+00, 7.82648326e+00, 1.05698615e+00,
       6.21631754e+00, 1.26659589e+01, 1.57267991e+00, 8.04879499e+00,
       1.51426317e+01, 1.96184592e+00, 1.04778700e+01, 1.85362261e+01,
       2.59448793e-02, 4.02632718e+00, 8.14893471e+00, 1.42793061e+00,
       6.95953889e+00, 1.38297401e+01, 2.03049414e+00, 9.34500654e+00,
       1.86145573e+01, 2.20741857e+00, 1.18654368e+01, 1.86721158e+01,
       5.41353881e-03, 2.52775149e-02, 1.10672116e+00, 1.73949590e-01,
       8.98227867e-01, 1.80098822e+00, 1.57099937e-02, 1.04078550e+00,
       1.91476877e+00, 2.05500094e-01, 1.17268727e+00, 2.40573237e+00,
       1.12732928e-01, 7.78900243e-01, 1.54099761e+00, 2.76437377e-02,
       1.01308992e+00, 1.91379430e+00, 1.98716367e-01, 1.17919380e+00,
       2.34973618e+00, 2.66399769e-01, 1.31859512e+00, 2.66994576e+00,
       2.93868633e-03, 7.04881642e-01, 1.60206449e+00, 1.60498392e-01,
       9.52503540e-01, 1.91809715e+00, 1.94557788e-01, 1.09525690e+00,
       2.23916437e+00, 2.32482386e-01, 1.24463980e+00, 2.54387397e+00,
       6.14833387e-03, 8.16383663e-01, 1.33061590e+00, 2.16460178e-01,
       1.02930009e+00, 2.04081586e+00, 2.36969371e-01, 1.20452314e+00,
       2.41567959e+00, 1.94415237e-01, 1.36151271e+00, 2.75285005e+00,
       1.97173643e-01, 1.11913791e+00, 2.26289923e+00, 1.62623913e-01,
       1.19515019e+00, 2.38420178e+00, 2.29007161e-01, 1.26249198e+00,
       2.50822167e+00, 7.60355014e-03, 1.31309557e+00, 2.66212942e+00,
       1.61137168e-01, 1.13717253e+00, 2.28656810e+00, 1.65072787e-01,
       1.18561634e+00, 2.42094617e+00, 1.81529410e-01, 1.26989893e+00,
       2.55605783e+00, 2.46650594e-01, 1.19294955e+00, 2.28105733e+00,
       2.03150957e-01, 1.16237547e+00, 2.33653432e+00, 1.74794449e-01,
       1.24969473e+00, 2.51291598e+00, 2.43654071e-01, 1.33339969e+00,
       2.71069045e+00, 2.67121048e-01, 1.47762235e+00, 2.91938029e+00,
       1.64479036e-01, 1.16566268e+00, 2.32599083e+00, 1.80805472e-01,
       1.25683800e+00, 2.55069832e+00, 1.97226363e-01, 1.37543887e+00,
       2.74857376e+00, 2.76566818e-01, 1.47740507e+00, 2.64004243e+00]), 'mean_score_time': array([3.22113378e-02, 4.60577011e-03, 9.57417488e-03, 1.06314250e-03,
       5.30171394e-03, 8.08129992e-03, 1.39992578e-03, 4.83996528e-03,
       9.64549610e-03, 1.32046427e-03, 4.48478971e-03, 8.67663111e-03,
       1.38115883e-03, 4.38897950e-03, 8.48402296e-03, 1.13122804e-03,
       4.68168940e-03, 9.65738297e-03, 1.26402719e-03, 4.55580439e-03,
       9.28803853e-03, 1.45847457e-03, 4.80672291e-03, 8.61651557e-03,
       1.34958540e-03, 4.67423030e-03, 8.84212766e-03, 1.38156755e-03,
       5.00120435e-03, 8.85135787e-03, 1.21760368e-03, 4.80937958e-03,
       9.06787600e-03, 1.19243349e-03, 4.93959018e-03, 9.68268939e-03,
       1.29410199e-03, 4.70382827e-03, 9.25207138e-03, 1.07731138e-03,
       4.56683976e-03, 9.05990601e-03, 1.08238629e-03, 5.08979389e-03,
       9.72924914e-03, 1.44376074e-03, 5.42221751e-03, 9.32209832e-03,
       1.21466569e-01, 6.65112053e-01, 1.29127996e+00, 1.48864780e-01,
       7.07603829e-01, 1.36763825e+00, 1.60492556e-01, 7.44287695e-01,
       1.46221389e+00, 1.57266412e-01, 7.58994102e-01, 1.55384765e+00,
       1.14443711e-01, 6.20473998e-01, 1.31821047e+00, 1.55026504e-01,
       7.58620024e-01, 1.38389359e+00, 1.54559135e-01, 7.23310777e-01,
       1.47467637e+00, 1.45380872e-01, 7.68250772e-01, 1.52912702e+00,
       1.13362823e-01, 6.30176783e-01, 1.20319561e+00, 1.48638998e-01,
       6.90450532e-01, 1.33620855e+00, 1.59545558e-01, 7.19971180e-01,
       1.46008938e+00, 1.22416939e-01, 7.28131396e-01, 1.47676696e+00,
       1.21906621e-01, 6.80114474e-01, 1.34308072e+00, 1.19737080e-01,
       6.87022584e-01, 1.41448273e+00, 1.23826095e-01, 7.34470946e-01,
       1.49878941e+00, 1.53639827e-01, 7.27666753e-01, 1.48997307e+00,
       1.78630011e-03, 6.25603540e-03, 1.04686873e-02, 1.60496575e-03,
       4.96254648e-03, 8.89897346e-03, 1.24808720e-03, 4.90011488e-03,
       8.71075903e-03, 1.37397221e-03, 4.86251286e-03, 9.93238177e-03,
       1.34604318e-03, 4.91510119e-03, 9.77567264e-03, 1.35953086e-03,
       4.86639568e-03, 9.84948022e-03, 1.64096696e-03, 5.27082171e-03,
       8.65970339e-03, 1.62632125e-03, 4.85341890e-03, 9.14958545e-03,
       1.62655967e-03, 4.97896331e-03, 9.09948349e-03, 1.38054575e-03,
       4.70689365e-03, 9.35745239e-03, 1.39437403e-03, 5.01108170e-03,
       1.03572777e-02, 1.13272667e-03, 4.87307140e-03, 9.47155271e-03,
       1.00990704e-03, 4.95246478e-03, 9.27829742e-03, 1.19311469e-03,
       4.93591172e-03, 9.27737781e-03, 1.28814152e-03, 5.35539218e-03,
       8.06726728e-03, 1.54072898e-03, 4.98444693e-03, 9.53044210e-03,
       4.20127596e-03, 1.88097954e-02, 3.77094064e-02, 2.68398012e-03,
       1.95074422e-02, 3.75255176e-02, 4.04674666e-03, 1.91295147e-02,
       3.79582133e-02, 2.80410903e-03, 1.98642186e-02, 3.78639357e-02,
       2.97468049e-03, 1.88422203e-02, 3.71183327e-02, 3.78165926e-03,
       1.88262463e-02, 3.71218409e-02, 2.95564107e-03, 1.91704205e-02,
       3.70943546e-02, 2.67781530e-03, 1.94771630e-02, 3.77969742e-02,
       2.96190807e-03, 1.89539705e-02, 3.37668146e-02, 3.31098693e-03,
       1.69671263e-02, 3.73023919e-02, 3.12025206e-03, 1.88591480e-02,
       3.65793024e-02, 2.61119434e-03, 1.85168130e-02, 3.72365543e-02,
       2.59545871e-03, 1.86357498e-02, 3.67689814e-02, 3.03469385e-03,
       1.83697087e-02, 3.67253848e-02, 3.79085541e-03, 1.89555713e-02,
       3.72882571e-02, 2.85186086e-03, 1.86438901e-02, 3.67358071e-02,
       1.81071418e-01, 9.58770105e-01, 2.00157285e+00, 1.71146461e-01,
       9.27145617e-01, 1.83531880e+00, 1.95509945e-01, 9.71810954e-01,
       1.78740164e+00, 1.91152436e-01, 9.55118690e-01, 1.80760918e+00,
       1.92999465e-01, 1.09343631e+00, 1.90869583e+00, 1.72045742e-01,
       9.65742861e-01, 1.92244012e+00, 1.69073582e-01, 9.00222744e-01,
       1.90981354e+00, 1.80644376e-01, 9.73928281e-01, 1.95160341e+00,
       1.35391167e-01, 1.00085637e+00, 1.87313352e+00, 1.81273665e-01,
       9.59600346e-01, 1.92538731e+00, 1.69601372e-01, 9.14535216e-01,
       1.92923791e+00, 1.96934223e-01, 1.04400553e+00, 1.94214031e+00,
       1.42129626e-01, 9.40124989e-01, 1.86986865e+00, 1.74197027e-01,
       9.72684520e-01, 1.93655719e+00, 1.85183116e-01, 9.61364814e-01,
       2.05962740e+00, 1.70522758e-01, 9.67450074e-01, 2.08950465e+00,
       2.69324439e-03, 1.26770224e-02, 2.74420466e-02, 3.95774841e-03,
       1.84969561e-02, 3.65616594e-02, 5.29708181e-03, 1.98443617e-02,
       3.95776544e-02, 5.06227357e-03, 2.22705092e-02, 4.18385097e-02,
       4.84514236e-03, 1.68037415e-02, 3.25610978e-02, 5.78052657e-03,
       2.00290339e-02, 3.95662444e-02, 5.79493386e-03, 2.38432203e-02,
       4.58622660e-02, 5.07140160e-03, 2.44348390e-02, 4.81012208e-02,
       2.65063558e-03, 1.78954942e-02, 3.31436225e-02, 3.51139477e-03,
       1.92510741e-02, 3.75498022e-02, 3.94504411e-03, 2.03737531e-02,
       4.01735987e-02, 4.43618638e-03, 2.16085911e-02, 4.18406555e-02,
       3.08292253e-03, 1.75238337e-02, 3.15428121e-02, 4.38414301e-03,
       2.05950056e-02, 3.98160389e-02, 4.59882191e-03, 2.25028651e-02,
       4.30686133e-02, 4.07958031e-03, 2.28024210e-02, 4.43444252e-02,
       7.84433569e-02, 4.46887323e-01, 8.96819626e-01, 7.18099730e-02,
       4.46984427e-01, 8.94787346e-01, 7.58722850e-02, 4.53710045e-01,
       9.20021023e-01, 6.32835116e-02, 4.59567513e-01, 9.24853802e-01,
       7.19039781e-02, 4.52154466e-01, 9.02176755e-01, 7.13316372e-02,
       4.57055977e-01, 9.17146581e-01, 7.35751561e-02, 4.56777130e-01,
       9.08885172e-01, 7.91994844e-02, 4.51324940e-01, 9.04386861e-01,
       7.49496392e-02, 4.44920131e-01, 9.00267294e-01, 6.96080412e-02,
       4.48021514e-01, 8.97289480e-01, 7.58243288e-02, 4.45355790e-01,
       8.97378683e-01, 7.87466254e-02, 4.44930519e-01, 8.97771052e-01,
       6.95002079e-02, 4.49743646e-01, 8.97070851e-01, 7.06805842e-02,
       4.52087981e-01, 9.09127304e-01, 7.25927012e-02, 4.55959763e-01,
       9.09471921e-01, 8.02949837e-02, 4.87530402e-01, 6.45965474e-01]), 'std_score_time': array([1.48792665e-02, 1.03738888e-03, 2.79372273e-03, 4.19309717e-05,
       6.36883089e-04, 1.45810887e-03, 2.68308632e-04, 9.69990165e-04,
       1.65929657e-03, 2.63861342e-04, 8.73352578e-04, 1.76888025e-03,
       2.32495088e-04, 8.84025436e-04, 1.72134117e-03, 2.11404125e-04,
       8.82708985e-04, 2.01677998e-03, 2.28541507e-04, 1.00495862e-03,
       2.34151731e-03, 2.15787752e-04, 1.01394565e-03, 1.89359488e-03,
       2.28554836e-04, 9.77015287e-04, 1.87223420e-03, 2.91334117e-04,
       8.93319477e-04, 1.68137028e-03, 2.16962741e-04, 9.33863892e-04,
       1.68671150e-03, 1.98416358e-04, 1.08145704e-03, 1.68008614e-03,
       2.72730651e-04, 1.00518171e-03, 1.69475009e-03, 1.90062353e-04,
       1.02870122e-03, 1.79993932e-03, 3.30614153e-05, 1.24408339e-03,
       2.74047085e-03, 2.31764053e-04, 1.22609713e-03, 2.24080455e-03,
       9.49562177e-03, 8.26037544e-02, 2.02433213e-01, 1.18694821e-02,
       9.80441087e-02, 2.33275746e-01, 4.78297456e-03, 1.10430032e-01,
       2.60565569e-01, 9.62350696e-03, 8.25546082e-02, 1.57471673e-01,
       1.72669126e-02, 8.82424619e-02, 2.30713452e-01, 5.02962140e-03,
       7.04496743e-02, 1.98034461e-01, 4.52687664e-02, 1.81909839e-01,
       3.30611078e-01, 2.40045604e-02, 1.22992733e-01, 3.38941417e-01,
       1.75484926e-02, 1.29427845e-01, 2.02405288e-01, 8.85950042e-03,
       1.05437095e-01, 2.74835189e-01, 4.91621276e-03, 1.59935677e-01,
       3.09315333e-01, 2.26293616e-02, 1.55778291e-01, 3.15958550e-01,
       1.85665967e-02, 1.08421151e-01, 2.86550144e-01, 1.50040929e-02,
       9.00964800e-02, 1.79626254e-01, 1.62659557e-02, 1.55770409e-01,
       1.96607957e-01, 2.00870920e-02, 1.34673287e-01, 2.68609510e-01,
       8.96014156e-05, 1.38071309e-04, 1.24577935e-03, 1.69843733e-04,
       1.14426105e-03, 1.62341467e-03, 2.94197581e-04, 9.54738831e-04,
       1.93404906e-03, 2.57390700e-04, 8.19521007e-04, 1.91035810e-03,
       1.87872229e-04, 9.20157656e-04, 2.03713110e-03, 2.81648273e-04,
       1.18539540e-03, 1.96378568e-03, 3.67363470e-04, 1.17431134e-03,
       2.13740052e-03, 3.17481396e-04, 1.36844252e-03, 2.40934909e-03,
       1.31622154e-04, 1.19596754e-03, 2.41529500e-03, 3.28709299e-04,
       1.17705965e-03, 2.50650861e-03, 2.89683181e-04, 1.13356697e-03,
       2.47713242e-03, 2.48610272e-04, 1.04668266e-03, 2.31176292e-03,
       1.47343170e-05, 1.22700395e-03, 2.23842714e-03, 2.88844413e-04,
       1.22039698e-03, 2.23558187e-03, 3.51328558e-04, 1.19086642e-03,
       1.91847681e-03, 2.26047460e-04, 1.13909991e-03, 2.67943802e-03,
       1.22075343e-03, 5.92674364e-03, 1.16962243e-02, 8.56017907e-05,
       5.45752587e-03, 1.12076853e-02, 1.19138630e-03, 5.60914870e-03,
       1.12539869e-02, 3.21734864e-04, 4.89244897e-03, 1.13150084e-02,
       8.51626776e-04, 5.65188285e-03, 1.05575572e-02, 1.29779429e-03,
       6.06851367e-03, 1.22523399e-02, 8.81150165e-04, 5.31710686e-03,
       1.18814935e-02, 1.83594552e-04, 5.41297282e-03, 1.13142938e-02,
       8.40975360e-04, 5.84637359e-03, 1.11279774e-02, 1.12966015e-03,
       5.93072388e-03, 1.09887250e-02, 8.89860880e-04, 5.76024095e-03,
       1.20248421e-02, 4.25349185e-05, 5.85195148e-03, 1.11783807e-02,
       1.07453721e-04, 5.86069148e-03, 1.12549943e-02, 9.19865136e-04,
       5.56677543e-03, 1.17458362e-02, 1.19878812e-03, 5.44545466e-03,
       1.13415723e-02, 2.68238593e-04, 5.89444024e-03, 1.19921531e-02,
       4.17903356e-02, 2.34060883e-01, 3.70009730e-01, 4.03958715e-02,
       2.23308716e-01, 4.40507527e-01, 4.59580843e-02, 1.86719914e-01,
       4.16463010e-01, 4.29478668e-02, 2.17611511e-01, 3.97551898e-01,
       4.43804511e-02, 1.65061330e-01, 4.47413650e-01, 4.12314820e-02,
       2.08656744e-01, 4.21447624e-01, 3.79554868e-02, 2.07130283e-01,
       3.93908710e-01, 4.09846311e-02, 1.97776526e-01, 4.28714631e-01,
       1.36678593e-03, 1.84838119e-01, 4.21104782e-01, 4.59978608e-02,
       2.09914697e-01, 4.11454207e-01, 3.86556128e-02, 2.14338911e-01,
       4.14072366e-01, 4.16488797e-02, 1.48609903e-01, 4.10105179e-01,
       1.33431844e-03, 2.13517269e-01, 4.14868963e-01, 3.92464978e-02,
       1.99610546e-01, 4.17433483e-01, 4.22365961e-02, 2.02367238e-01,
       3.72157788e-01, 3.92508631e-02, 2.15723547e-01, 3.84303516e-01,
       4.67115681e-05, 1.93512636e-04, 6.10707999e-03, 9.64727617e-04,
       4.48274213e-03, 8.43141194e-03, 1.38794070e-04, 4.50483769e-03,
       9.04587096e-03, 9.09061665e-04, 4.77015758e-03, 9.67852430e-03,
       6.40292411e-04, 4.17506197e-03, 8.05656172e-03, 1.60784033e-04,
       4.74233500e-03, 9.34358823e-03, 7.83925278e-04, 5.17027570e-03,
       1.00696028e-02, 1.04912953e-03, 5.31284303e-03, 1.03160866e-02,
       1.68622113e-04, 3.63652211e-03, 8.33474081e-03, 8.24188455e-04,
       4.61569408e-03, 8.92170773e-03, 9.26031360e-04, 4.54262466e-03,
       9.02248625e-03, 9.50169114e-04, 5.05451685e-03, 9.54069517e-03,
       4.23842665e-05, 4.14057512e-03, 8.27828454e-03, 1.00623159e-03,
       5.01851661e-03, 9.26371569e-03, 9.32291681e-04, 5.21140244e-03,
       9.98339722e-03, 7.10817966e-04, 5.16899296e-03, 1.00701682e-02,
       1.99166746e-02, 1.14927144e-01, 2.37559804e-01, 1.59751028e-02,
       1.14222829e-01, 2.23283539e-01, 2.02108017e-02, 1.19093396e-01,
       2.40810312e-01, 4.90302323e-04, 1.19467043e-01, 2.47451174e-01,
       1.58934645e-02, 1.17154987e-01, 2.42474239e-01, 1.54694629e-02,
       1.16858577e-01, 2.48395336e-01, 1.55430964e-02, 1.14345412e-01,
       2.38524736e-01, 1.99948529e-02, 1.11887974e-01, 2.21100421e-01,
       2.07912386e-02, 1.15084330e-01, 2.30257829e-01, 1.62506224e-02,
       1.09873632e-01, 2.24072377e-01, 2.04858911e-02, 1.11350328e-01,
       2.21493272e-01, 1.98995638e-02, 1.10689504e-01, 2.17426382e-01,
       1.55555820e-02, 1.14554959e-01, 2.26561531e-01, 1.48850647e-02,
       1.14032893e-01, 2.36710879e-01, 1.47110534e-02, 1.12982600e-01,
       2.32938506e-01, 2.09444887e-02, 1.01413587e-01, 1.39134147e-02]), 'param_base_estimator': masked_array(data=[LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False),
                   ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False)],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_bootstrap': masked_array(data=[True, True, True, True, True, True, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, True, True, True, True, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, True, True, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, True, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, True, True, True, True, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, True, True, True, True, True, True, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, True, True, True, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, True, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, True, True, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_bootstrap_features': masked_array(data=[True, True, True, True, True, True, True, True, True,
                   True, True, True, False, False, False, False, False,
                   False, False, False, False, False, False, False, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, False, False, False, False, False, False,
                   False, False, False, False, False, False, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, False, False, False, False, False, False, False,
                   False, False, False, False, False, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, True, True, True, True,
                   True, True, True, True, True, True, True, True, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, True, True, True, True, True,
                   True, True, True, True, True, True, True, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, True, True, True, True, True, True, True,
                   True, True, True, True, True, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, True, True, True, True, True, True, True, True,
                   True, True, True, True, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   True, True, True, True, True, True, True, True, True,
                   True, True, True, False, False, False, False, False,
                   False, False, False, False, False, False, False, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, False, False, False, False, False, False,
                   False, False, False, False, False, False, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, False, False, False, False, False, False, False,
                   False, False, False, False, False, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, True, True, True, True,
                   True, True, True, True, True, True, True, True, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, True, True, True, True, True,
                   True, True, True, True, True, True, True, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_features': masked_array(data=[0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 1.0,
                   1.0, 1.0, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.75, 0.75,
                   0.75, 1.0, 1.0, 1.0, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5,
                   0.75, 0.75, 0.75, 1.0, 1.0, 1.0, 0.25, 0.25, 0.25, 0.5,
                   0.5, 0.5, 0.75, 0.75, 0.75, 1.0, 1.0, 1.0, 0.25, 0.25,
                   0.25, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 1.0, 1.0, 1.0,
                   0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 1.0,
                   1.0, 1.0, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.75, 0.75,
                   0.75, 1.0, 1.0, 1.0, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5,
                   0.75, 0.75, 0.75, 1.0, 1.0, 1.0, 0.25, 0.25, 0.25, 0.5,
                   0.5, 0.5, 0.75, 0.75, 0.75, 1.0, 1.0, 1.0, 0.25, 0.25,
                   0.25, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 1.0, 1.0, 1.0,
                   0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 1.0,
                   1.0, 1.0, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.75, 0.75,
                   0.75, 1.0, 1.0, 1.0, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5,
                   0.75, 0.75, 0.75, 1.0, 1.0, 1.0, 0.25, 0.25, 0.25, 0.5,
                   0.5, 0.5, 0.75, 0.75, 0.75, 1.0, 1.0, 1.0, 0.25, 0.25,
                   0.25, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 1.0, 1.0, 1.0,
                   0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 1.0,
                   1.0, 1.0, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.75, 0.75,
                   0.75, 1.0, 1.0, 1.0, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5,
                   0.75, 0.75, 0.75, 1.0, 1.0, 1.0, 0.25, 0.25, 0.25, 0.5,
                   0.5, 0.5, 0.75, 0.75, 0.75, 1.0, 1.0, 1.0, 0.25, 0.25,
                   0.25, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 1.0, 1.0, 1.0,
                   0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 1.0,
                   1.0, 1.0, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.75, 0.75,
                   0.75, 1.0, 1.0, 1.0, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5,
                   0.75, 0.75, 0.75, 1.0, 1.0, 1.0, 0.25, 0.25, 0.25, 0.5,
                   0.5, 0.5, 0.75, 0.75, 0.75, 1.0, 1.0, 1.0, 0.25, 0.25,
                   0.25, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 1.0, 1.0, 1.0,
                   0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 1.0,
                   1.0, 1.0, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.75, 0.75,
                   0.75, 1.0, 1.0, 1.0, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5,
                   0.75, 0.75, 0.75, 1.0, 1.0, 1.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10,
                   50, 100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100, 10, 50,
                   100, 10, 50, 100, 10, 50, 100, 10, 50, 100],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=50, multi_class='ovr', n_jobs=None,
          penalty='l2', random_state=5, solver='saga', tol=0.0075,
          verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': KNeighborsClassifier(algorithm='brute', leaf_size=30, metric='chebyshev',
           metric_params=None, n_jobs=None, n_neighbors=41, p=2,
           weights='uniform'), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='lsqr', store_covariance=False, tol=0.0001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
        fit_intercept=False, max_iter=None, normalize=False,
        random_state=5, solver='lsqr', tol=0.001), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': GradientBoostingClassifier(criterion='friedman_mse', init=None,
              learning_rate=0.125, loss='deviance', max_depth=5,
              max_features=None, max_leaf_nodes=10,
              min_impurity_decrease=0.2, min_impurity_split=None,
              min_samples_leaf=20, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=150,
              n_iter_no_change=None, presort='auto', random_state=5,
              subsample=1.0, tol=0.0001, validation_fraction=0.1,
              verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': True, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': True, 'max_features': 1.0, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.25, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.5, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 0.75, 'n_estimators': 100}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 10}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 50}, {'base_estimator': ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='entropy',
           max_depth=None, max_features=None, max_leaf_nodes=20,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=2, min_samples_split=3,
           min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=None,
           oob_score=False, random_state=5, verbose=0, warm_start=False), 'bootstrap': False, 'bootstrap_features': False, 'max_features': 1.0, 'n_estimators': 100}], 'split0_test_score': array([0.54038997, 0.69916435, 0.68802228, 0.69637883, 0.70473538,
       0.69637883, 0.68802228, 0.6908078 , 0.69637883, 0.68523677,
       0.69359331, 0.69637883, 0.67966574, 0.69359331, 0.70473538,
       0.69637883, 0.6908078 , 0.6908078 , 0.6908078 , 0.6908078 ,
       0.69359331, 0.69637883, 0.69916435, 0.69637883, 0.57938719,
       0.69916435, 0.6908078 , 0.70473538, 0.70194986, 0.69637883,
       0.68802228, 0.68802228, 0.69637883, 0.6908078 , 0.69637883,
       0.69916435, 0.67966574, 0.69637883, 0.69637883, 0.69637883,
       0.69359331, 0.6908078 , 0.69359331, 0.69359331, 0.69916435,
       0.69916435, 0.69916435, 0.69916435, 0.64623955, 0.65738162,
       0.6545961 , 0.64623955, 0.6545961 , 0.66295265, 0.67966574,
       0.67130919, 0.67409471, 0.66852368, 0.65738162, 0.66016713,
       0.65181058, 0.67130919, 0.65181058, 0.66573816, 0.64902507,
       0.65738162, 0.66295265, 0.66852368, 0.66573816, 0.68245125,
       0.67966574, 0.67966574, 0.6183844 , 0.66016713, 0.66852368,
       0.6183844 , 0.6545961 , 0.67409471, 0.65738162, 0.67130919,
       0.67409471, 0.68245125, 0.66016713, 0.67130919, 0.68245125,
       0.67966574, 0.64902507, 0.67966574, 0.64623955, 0.64902507,
       0.67688022, 0.67409471, 0.66573816, 0.68523677, 0.68523677,
       0.68523677, 0.59610028, 0.6183844 , 0.62395543, 0.59331476,
       0.60167131, 0.62952646, 0.64623955, 0.64623955, 0.6545961 ,
       0.6545961 , 0.64345404, 0.65738162, 0.6908078 , 0.65181058,
       0.58774373, 0.68523677, 0.64066852, 0.62952646, 0.67966574,
       0.66295265, 0.66852368, 0.64623955, 0.64902507, 0.65181058,
       0.59052925, 0.62395543, 0.62952646, 0.58495822, 0.60445682,
       0.63509749, 0.62116992, 0.64902507, 0.64902507, 0.65181058,
       0.64623955, 0.6545961 , 0.69359331, 0.6545961 , 0.59052925,
       0.67409471, 0.64902507, 0.62952646, 0.67409471, 0.66295265,
       0.66573816, 0.64902507, 0.64902507, 0.64902507, 0.50696379,
       0.53760446, 0.61002786, 0.63788301, 0.6908078 , 0.68523677,
       0.68802228, 0.68245125, 0.68523677, 0.6908078 , 0.68523677,
       0.68245125, 0.61281337, 0.6908078 , 0.68523677, 0.6908078 ,
       0.69359331, 0.68523677, 0.6908078 , 0.68523677, 0.68523677,
       0.69359331, 0.69359331, 0.69359331, 0.50696379, 0.51532033,
       0.50696379, 0.68802228, 0.68802228, 0.68802228, 0.69637883,
       0.68523677, 0.68523677, 0.69637883, 0.69637883, 0.69637883,
       0.50696379, 0.69359331, 0.67966574, 0.68245125, 0.6908078 ,
       0.6908078 , 0.68802228, 0.69637883, 0.69637883, 0.69637883,
       0.69637883, 0.69637883, 0.53481894, 0.65738162, 0.67130919,
       0.64902507, 0.65181058, 0.66852368, 0.66295265, 0.66016713,
       0.67130919, 0.67130919, 0.66573816, 0.67688022, 0.65738162,
       0.66573816, 0.63231198, 0.65738162, 0.66573816, 0.66573816,
       0.67409471, 0.68245125, 0.68802228, 0.67688022, 0.68523677,
       0.68802228, 0.55988858, 0.64345404, 0.64902507, 0.63231198,
       0.65738162, 0.67688022, 0.67130919, 0.68245125, 0.68802228,
       0.67966574, 0.68523677, 0.68523677, 0.64902507, 0.64623955,
       0.63788301, 0.6545961 , 0.65738162, 0.67966574, 0.67688022,
       0.68523677, 0.68802228, 0.68245125, 0.68802228, 0.68802228,
       0.55431755, 0.64623955, 0.66016713, 0.65738162, 0.67966574,
       0.69637883, 0.68802228, 0.68245125, 0.69359331, 0.69359331,
       0.67966574, 0.69359331, 0.69359331, 0.68802228, 0.63509749,
       0.67966574, 0.67409471, 0.67688022, 0.69637883, 0.68523677,
       0.69637883, 0.69637883, 0.70473538, 0.70194986, 0.545961  ,
       0.62674095, 0.6545961 , 0.65181058, 0.68245125, 0.70473538,
       0.68523677, 0.68523677, 0.69359331, 0.68802228, 0.68802228,
       0.69916435, 0.69916435, 0.66295265, 0.62116992, 0.67409471,
       0.66573816, 0.67688022, 0.70752089, 0.71030641, 0.70473538,
       0.68245125, 0.68245125, 0.68245125, 0.545961  , 0.64345404,
       0.66573816, 0.64902507, 0.6908078 , 0.69359331, 0.67130919,
       0.6908078 , 0.69359331, 0.68802228, 0.68802228, 0.69359331,
       0.68802228, 0.66295265, 0.62395543, 0.68245125, 0.66295265,
       0.66852368, 0.67966574, 0.68802228, 0.68802228, 0.6908078 ,
       0.68802228, 0.69359331, 0.545961  , 0.64066852, 0.68802228,
       0.63231198, 0.69637883, 0.69359331, 0.66573816, 0.70194986,
       0.68802228, 0.67966574, 0.69637883, 0.68802228, 0.68245125,
       0.66573816, 0.62674095, 0.67688022, 0.6545961 , 0.66852368,
       0.67688022, 0.6908078 , 0.6908078 , 0.69637883, 0.70194986,
       0.69916435]), 'split1_test_score': array([0.51532033, 0.67409471, 0.66016713, 0.65738162, 0.67130919,
       0.66295265, 0.66852368, 0.66295265, 0.67409471, 0.66573816,
       0.66852368, 0.66852368, 0.64623955, 0.66573816, 0.66016713,
       0.66852368, 0.66016713, 0.66573816, 0.67130919, 0.66573816,
       0.66852368, 0.66295265, 0.66852368, 0.66852368, 0.49860724,
       0.67409471, 0.67130919, 0.65738162, 0.67130919, 0.67130919,
       0.66573816, 0.66573816, 0.67130919, 0.66295265, 0.67130919,
       0.66852368, 0.64902507, 0.66016713, 0.65181058, 0.66852368,
       0.66295265, 0.66573816, 0.66852368, 0.66852368, 0.66852368,
       0.66852368, 0.66852368, 0.66573816, 0.66573816, 0.64066852,
       0.64345404, 0.63509749, 0.65738162, 0.65738162, 0.65181058,
       0.66295265, 0.66295265, 0.65738162, 0.66016713, 0.64623955,
       0.6545961 , 0.66016713, 0.65738162, 0.64623955, 0.66295265,
       0.66016713, 0.6545961 , 0.66016713, 0.64902507, 0.65738162,
       0.64902507, 0.64902507, 0.63231198, 0.66852368, 0.67409471,
       0.66295265, 0.66295265, 0.67130919, 0.67130919, 0.67409471,
       0.67688022, 0.66573816, 0.66852368, 0.66852368, 0.64623955,
       0.6545961 , 0.6545961 , 0.64345404, 0.66852368, 0.66573816,
       0.6545961 , 0.65181058, 0.66016713, 0.6545961 , 0.6545961 ,
       0.6545961 , 0.64066852, 0.66016713, 0.6545961 , 0.60167131,
       0.60724234, 0.62952646, 0.60724234, 0.63788301, 0.63231198,
       0.60724234, 0.62674095, 0.63509749, 0.64902507, 0.63788301,
       0.6183844 , 0.64345404, 0.63788301, 0.62674095, 0.63509749,
       0.63788301, 0.64066852, 0.60167131, 0.63509749, 0.63231198,
       0.60445682, 0.64623955, 0.66295265, 0.58495822, 0.61002786,
       0.63231198, 0.61002786, 0.64345404, 0.64066852, 0.61559889,
       0.62952646, 0.63788301, 0.65181058, 0.65181058, 0.62674095,
       0.63231198, 0.63788301, 0.63231198, 0.63788301, 0.64066852,
       0.64345404, 0.62952646, 0.62952646, 0.62952646, 0.50696379,
       0.5264624 , 0.53481894, 0.62952646, 0.66573816, 0.66852368,
       0.66016713, 0.66573816, 0.66295265, 0.66852368, 0.66295265,
       0.66295265, 0.66295265, 0.64066852, 0.64345404, 0.66295265,
       0.66852368, 0.66852368, 0.66852368, 0.66852368, 0.67130919,
       0.66573816, 0.66573816, 0.67688022, 0.48746518, 0.59888579,
       0.60445682, 0.66295265, 0.67130919, 0.67130919, 0.66852368,
       0.67130919, 0.67130919, 0.66852368, 0.66852368, 0.66852368,
       0.50696379, 0.65181058, 0.63509749, 0.67130919, 0.66016713,
       0.66295265, 0.67688022, 0.66852368, 0.66852368, 0.66852368,
       0.66852368, 0.66852368, 0.56267409, 0.64623955, 0.63231198,
       0.6545961 , 0.65738162, 0.6545961 , 0.67130919, 0.64623955,
       0.64902507, 0.65738162, 0.6545961 , 0.64902507, 0.66016713,
       0.66573816, 0.65738162, 0.66295265, 0.66573816, 0.66016713,
       0.64066852, 0.64623955, 0.65181058, 0.64345404, 0.65738162,
       0.65738162, 0.5264624 , 0.64623955, 0.64902507, 0.65738162,
       0.6545961 , 0.64902507, 0.6545961 , 0.65738162, 0.65738162,
       0.66016713, 0.65738162, 0.6545961 , 0.64902507, 0.66295265,
       0.65181058, 0.66573816, 0.66295265, 0.66573816, 0.64902507,
       0.65738162, 0.66016713, 0.65181058, 0.6545961 , 0.65181058,
       0.57938719, 0.64066852, 0.65738162, 0.66016713, 0.65181058,
       0.66295265, 0.66295265, 0.65738162, 0.6545961 , 0.66295265,
       0.64902507, 0.65181058, 0.66016713, 0.6545961 , 0.64345404,
       0.67130919, 0.65181058, 0.64902507, 0.64345404, 0.64623955,
       0.64902507, 0.66016713, 0.65181058, 0.65181058, 0.56824513,
       0.66295265, 0.67130919, 0.6545961 , 0.6545961 , 0.65738162,
       0.65738162, 0.64902507, 0.64902507, 0.65738162, 0.64623955,
       0.6545961 , 0.67409471, 0.66852368, 0.66016713, 0.6545961 ,
       0.64623955, 0.64066852, 0.65738162, 0.64902507, 0.64902507,
       0.65181058, 0.65181058, 0.65181058, 0.55988858, 0.64902507,
       0.6545961 , 0.64623955, 0.64902507, 0.6545961 , 0.63788301,
       0.65181058, 0.66295265, 0.63509749, 0.66295265, 0.66295265,
       0.65181058, 0.65181058, 0.64623955, 0.64066852, 0.65181058,
       0.64066852, 0.65738162, 0.6545961 , 0.65181058, 0.64345404,
       0.65738162, 0.65738162, 0.55988858, 0.63788301, 0.64345404,
       0.62674095, 0.65181058, 0.65181058, 0.65181058, 0.6545961 ,
       0.66016713, 0.64623955, 0.64902507, 0.65738162, 0.65738162,
       0.64345404, 0.64902507, 0.6545961 , 0.64066852, 0.64345404,
       0.65738162, 0.6545961 , 0.6545961 , 0.6545961 , 0.65181058,
       0.65181058]), 'split2_test_score': array([0.54874652, 0.67130919, 0.67130919, 0.67130919, 0.66573816,
       0.66295265, 0.66573816, 0.66295265, 0.66295265, 0.66573816,
       0.65738162, 0.66295265, 0.66573816, 0.66016713, 0.66852368,
       0.66295265, 0.66573816, 0.66295265, 0.6545961 , 0.64902507,
       0.64902507, 0.66295265, 0.65738162, 0.64902507, 0.545961  ,
       0.67130919, 0.67409471, 0.66852368, 0.66016713, 0.66295265,
       0.66295265, 0.66295265, 0.66016713, 0.66573816, 0.66573816,
       0.65738162, 0.67130919, 0.66573816, 0.66573816, 0.65738162,
       0.66573816, 0.66573816, 0.6545961 , 0.64902507, 0.65738162,
       0.66295265, 0.66016713, 0.66016713, 0.62116992, 0.64623955,
       0.64623955, 0.64902507, 0.65181058, 0.64902507, 0.64902507,
       0.63509749, 0.63509749, 0.65738162, 0.62674095, 0.62952646,
       0.65181058, 0.66295265, 0.66573816, 0.63231198, 0.63509749,
       0.63509749, 0.64066852, 0.63509749, 0.64066852, 0.65738162,
       0.6545961 , 0.6545961 , 0.66016713, 0.66573816, 0.67688022,
       0.65181058, 0.66016713, 0.65738162, 0.66295265, 0.63788301,
       0.63788301, 0.65181058, 0.63509749, 0.63788301, 0.66852368,
       0.67409471, 0.66573816, 0.63231198, 0.63231198, 0.62674095,
       0.63788301, 0.64345404, 0.65181058, 0.67130919, 0.67130919,
       0.67130919, 0.65738162, 0.66016713, 0.66295265, 0.65738162,
       0.67409471, 0.67409471, 0.68523677, 0.67966574, 0.67966574,
       0.67688022, 0.67409471, 0.68245125, 0.68523677, 0.66852368,
       0.67130919, 0.67409471, 0.67688022, 0.67688022, 0.67966574,
       0.67688022, 0.67409471, 0.67966574, 0.68245125, 0.67688022,
       0.66295265, 0.66852368, 0.66573816, 0.65738162, 0.66852368,
       0.67409471, 0.68245125, 0.67966574, 0.67688022, 0.68523677,
       0.67688022, 0.67688022, 0.67966574, 0.66295265, 0.67966574,
       0.66573816, 0.67130919, 0.67130919, 0.67409471, 0.67409471,
       0.67409471, 0.67688022, 0.67688022, 0.67688022, 0.50696379,
       0.50696379, 0.52089136, 0.58774373, 0.66016713, 0.6545961 ,
       0.67688022, 0.64345404, 0.6545961 , 0.67130919, 0.65181058,
       0.65181058, 0.66852368, 0.64623955, 0.62116992, 0.64902507,
       0.6545961 , 0.64902507, 0.64902507, 0.64902507, 0.65181058,
       0.66573816, 0.66852368, 0.65738162, 0.50696379, 0.50696379,
       0.50696379, 0.64623955, 0.64623955, 0.64623955, 0.66016713,
       0.66016713, 0.64623955, 0.66016713, 0.66016713, 0.66016713,
       0.50696379, 0.63788301, 0.62395543, 0.64623955, 0.64902507,
       0.64902507, 0.65738162, 0.66016713, 0.66016713, 0.66016713,
       0.66016713, 0.66016713, 0.55153203, 0.66573816, 0.66295265,
       0.66295265, 0.66573816, 0.66295265, 0.66852368, 0.65738162,
       0.65738162, 0.64902507, 0.66573816, 0.66295265, 0.66295265,
       0.64345404, 0.63788301, 0.66016713, 0.65738162, 0.64902507,
       0.67409471, 0.66852368, 0.65738162, 0.68245125, 0.67966574,
       0.67409471, 0.57103064, 0.65181058, 0.64902507, 0.66016713,
       0.66295265, 0.66295265, 0.66573816, 0.66852368, 0.66852368,
       0.67130919, 0.66295265, 0.66573816, 0.67130919, 0.64902507,
       0.64345404, 0.65738162, 0.6545961 , 0.6545961 , 0.68802228,
       0.67130919, 0.66852368, 0.67688022, 0.68802228, 0.68802228,
       0.59610028, 0.67688022, 0.66016713, 0.6545961 , 0.65738162,
       0.66295265, 0.65181058, 0.64902507, 0.65738162, 0.64902507,
       0.6545961 , 0.65181058, 0.6545961 , 0.66016713, 0.6545961 ,
       0.66573816, 0.64623955, 0.64902507, 0.65181058, 0.64902507,
       0.64623955, 0.64345404, 0.65181058, 0.64902507, 0.61281337,
       0.66573816, 0.66016713, 0.66295265, 0.6545961 , 0.66016713,
       0.65181058, 0.66016713, 0.6545961 , 0.66016713, 0.66016713,
       0.65738162, 0.67409471, 0.66016713, 0.64902507, 0.6545961 ,
       0.64902507, 0.64902507, 0.65738162, 0.65738162, 0.6545961 ,
       0.65181058, 0.65181058, 0.65181058, 0.55153203, 0.67966574,
       0.67966574, 0.66852368, 0.67966574, 0.68245125, 0.67688022,
       0.67130919, 0.67966574, 0.66852368, 0.67130919, 0.67688022,
       0.65181058, 0.65738162, 0.66573816, 0.66295265, 0.67130919,
       0.67130919, 0.6545961 , 0.66573816, 0.67409471, 0.66295265,
       0.66295265, 0.66295265, 0.55988858, 0.67130919, 0.67130919,
       0.65738162, 0.67130919, 0.67966574, 0.67130919, 0.66573816,
       0.66573816, 0.66573816, 0.66573816, 0.66852368, 0.67130919,
       0.66852368, 0.66295265, 0.66016713, 0.66852368, 0.66852368,
       0.66295265, 0.66295265, 0.66573816, 0.66016713, 0.66016713,
       0.66016713]), 'split3_test_score': array([0.54469274, 0.65642458, 0.6452514 , 0.6452514 , 0.66480447,
       0.66201117, 0.67597765, 0.66201117, 0.66480447, 0.66201117,
       0.67039106, 0.66480447, 0.65921788, 0.6452514 , 0.65363128,
       0.66201117, 0.65363128, 0.65921788, 0.67039106, 0.66480447,
       0.67039106, 0.67039106, 0.67039106, 0.66759777, 0.53072626,
       0.6452514 , 0.65083799, 0.65642458, 0.65921788, 0.66201117,
       0.67597765, 0.65921788, 0.66759777, 0.66759777, 0.66759777,
       0.66759777, 0.66201117, 0.65083799, 0.65921788, 0.66759777,
       0.65921788, 0.65642458, 0.67597765, 0.67039106, 0.66759777,
       0.66759777, 0.66759777, 0.66759777, 0.6452514 , 0.64804469,
       0.65642458, 0.6424581 , 0.6396648 , 0.64804469, 0.63128492,
       0.64804469, 0.65083799, 0.65083799, 0.64804469, 0.6396648 ,
       0.6452514 , 0.65642458, 0.67039106, 0.67039106, 0.65921788,
       0.66480447, 0.6396648 , 0.64804469, 0.64804469, 0.65642458,
       0.65642458, 0.65921788, 0.66201117, 0.67318436, 0.66759777,
       0.64804469, 0.6424581 , 0.65083799, 0.64804469, 0.6452514 ,
       0.63407821, 0.65363128, 0.6452514 , 0.63687151, 0.63407821,
       0.65083799, 0.65642458, 0.65083799, 0.64804469, 0.6452514 ,
       0.64804469, 0.6424581 , 0.6424581 , 0.64804469, 0.64804469,
       0.64804469, 0.6452514 , 0.68156425, 0.67597765, 0.65083799,
       0.67877095, 0.67597765, 0.66759777, 0.67318436, 0.67877095,
       0.65363128, 0.68435754, 0.68156425, 0.68435754, 0.67318436,
       0.64804469, 0.68715084, 0.67318436, 0.67877095, 0.68156425,
       0.68156425, 0.67877095, 0.66759777, 0.67039106, 0.67039106,
       0.64804469, 0.67877095, 0.67039106, 0.6452514 , 0.67039106,
       0.67318436, 0.65642458, 0.67318436, 0.67039106, 0.65642458,
       0.67597765, 0.68435754, 0.66759777, 0.67877095, 0.64804469,
       0.68156425, 0.67318436, 0.67039106, 0.68435754, 0.67877095,
       0.68156425, 0.67039106, 0.67039106, 0.67039106, 0.50558659,
       0.50558659, 0.51955307, 0.67597765, 0.67039106, 0.67877095,
       0.65083799, 0.65363128, 0.66480447, 0.66759777, 0.66480447,
       0.67039106, 0.50558659, 0.59217877, 0.60893855, 0.68156425,
       0.67877095, 0.67318436, 0.68156425, 0.67039106, 0.66480447,
       0.65921788, 0.66201117, 0.66201117, 0.50558659, 0.50558659,
       0.50558659, 0.68435754, 0.67597765, 0.67597765, 0.65921788,
       0.65921788, 0.67597765, 0.65921788, 0.65921788, 0.65921788,
       0.50558659, 0.6452514 , 0.6424581 , 0.68156425, 0.67597765,
       0.67597765, 0.65921788, 0.65921788, 0.65921788, 0.65921788,
       0.65921788, 0.65921788, 0.56145251, 0.68715084, 0.67318436,
       0.6396648 , 0.66759777, 0.66480447, 0.67039106, 0.67597765,
       0.68156425, 0.66759777, 0.67039106, 0.67039106, 0.65363128,
       0.67039106, 0.67877095, 0.65083799, 0.65642458, 0.67597765,
       0.65642458, 0.67597765, 0.68156425, 0.65921788, 0.65642458,
       0.65083799, 0.59217877, 0.67877095, 0.67318436, 0.64804469,
       0.68435754, 0.68994413, 0.66480447, 0.68994413, 0.68994413,
       0.67318436, 0.67318436, 0.67877095, 0.65921788, 0.67597765,
       0.67877095, 0.68994413, 0.68435754, 0.68435754, 0.65363128,
       0.68715084, 0.68715084, 0.66759777, 0.65921788, 0.65642458,
       0.5698324 , 0.67318436, 0.66759777, 0.65083799, 0.66480447,
       0.66759777, 0.65083799, 0.64804469, 0.65642458, 0.65363128,
       0.65921788, 0.67597765, 0.65642458, 0.67318436, 0.65363128,
       0.65083799, 0.65363128, 0.66201117, 0.66480447, 0.67039106,
       0.67597765, 0.66759777, 0.67318436, 0.67877095, 0.62569832,
       0.67597765, 0.67039106, 0.6452514 , 0.67318436, 0.67877095,
       0.67877095, 0.66759777, 0.65921788, 0.67039106, 0.66201117,
       0.65921788, 0.65363128, 0.66759777, 0.67039106, 0.65921788,
       0.65363128, 0.65642458, 0.66480447, 0.66480447, 0.66480447,
       0.66480447, 0.66480447, 0.66480447, 0.56703911, 0.69273743,
       0.68156425, 0.64804469, 0.67877095, 0.68994413, 0.67318436,
       0.67877095, 0.68156425, 0.67318436, 0.68156425, 0.67597765,
       0.65363128, 0.68435754, 0.67877095, 0.66201117, 0.68156425,
       0.68715084, 0.67039106, 0.68435754, 0.67597765, 0.67877095,
       0.67877095, 0.67318436, 0.59776536, 0.67877095, 0.67877095,
       0.67039106, 0.68715084, 0.68715084, 0.66480447, 0.68156425,
       0.67318436, 0.66759777, 0.67877095, 0.66759777, 0.67877095,
       0.67318436, 0.67877095, 0.67597765, 0.67318436, 0.67877095,
       0.68156425, 0.67039106, 0.67597765, 0.67318436, 0.68156425,
       0.67877095]), 'split4_test_score': array([0.51955307, 0.69553073, 0.68156425, 0.68994413, 0.68435754,
       0.67877095, 0.69832402, 0.68715084, 0.68156425, 0.68994413,
       0.67877095, 0.67597765, 0.68435754, 0.67877095, 0.68994413,
       0.67877095, 0.69273743, 0.68994413, 0.69273743, 0.68715084,
       0.68435754, 0.69273743, 0.68435754, 0.68435754, 0.51675978,
       0.67877095, 0.68715084, 0.68435754, 0.68156425, 0.67877095,
       0.68994413, 0.68715084, 0.68156425, 0.69273743, 0.68156425,
       0.67877095, 0.68435754, 0.68435754, 0.68994413, 0.68156425,
       0.69273743, 0.68715084, 0.68156425, 0.68435754, 0.68156425,
       0.68156425, 0.68156425, 0.68156425, 0.66480447, 0.68156425,
       0.68715084, 0.67597765, 0.69832402, 0.7150838 , 0.68994413,
       0.70391061, 0.7150838 , 0.70949721, 0.72067039, 0.7150838 ,
       0.67318436, 0.69832402, 0.68994413, 0.71787709, 0.7150838 ,
       0.70949721, 0.70391061, 0.70391061, 0.70949721, 0.67597765,
       0.69273743, 0.69273743, 0.65921788, 0.67597765, 0.67877095,
       0.67039106, 0.68435754, 0.69553073, 0.70949721, 0.7122905 ,
       0.7122905 , 0.70670391, 0.72625698, 0.72346369, 0.7122905 ,
       0.7150838 , 0.71787709, 0.69273743, 0.70670391, 0.70949721,
       0.70391061, 0.70391061, 0.7122905 , 0.69273743, 0.69273743,
       0.69273743, 0.69832402, 0.69553073, 0.69273743, 0.72067039,
       0.70949721, 0.7150838 , 0.69553073, 0.70670391, 0.70949721,
       0.69273743, 0.7122905 , 0.70670391, 0.69832402, 0.69832402,
       0.70391061, 0.69273743, 0.7150838 , 0.70670391, 0.69553073,
       0.70111732, 0.70670391, 0.68156425, 0.69273743, 0.69832402,
       0.70949721, 0.70391061, 0.70391061, 0.7150838 , 0.7150838 ,
       0.70949721, 0.7122905 , 0.7150838 , 0.70949721, 0.70670391,
       0.70111732, 0.7122905 , 0.68715084, 0.69553073, 0.7150838 ,
       0.69553073, 0.70111732, 0.70111732, 0.70111732, 0.70670391,
       0.70391061, 0.68435754, 0.68435754, 0.68435754, 0.50558659,
       0.50558659, 0.50558659, 0.65083799, 0.67039106, 0.68715084,
       0.69273743, 0.68156425, 0.69273743, 0.69273743, 0.68715084,
       0.68994413, 0.68435754, 0.55307263, 0.53351955, 0.69273743,
       0.68715084, 0.68715084, 0.68715084, 0.68715084, 0.68435754,
       0.68156425, 0.68435754, 0.68435754, 0.50558659, 0.50558659,
       0.50558659, 0.69553073, 0.69273743, 0.69273743, 0.68715084,
       0.68994413, 0.69273743, 0.68715084, 0.68715084, 0.68715084,
       0.50558659, 0.66201117, 0.65083799, 0.70111732, 0.68994413,
       0.68994413, 0.68994413, 0.68715084, 0.68715084, 0.68715084,
       0.68715084, 0.68715084, 0.55865922, 0.65642458, 0.67877095,
       0.67318436, 0.68435754, 0.67597765, 0.68715084, 0.69273743,
       0.68994413, 0.70391061, 0.69273743, 0.68994413, 0.66201117,
       0.69832402, 0.68715084, 0.68715084, 0.67597765, 0.68156425,
       0.68715084, 0.67039106, 0.67877095, 0.69832402, 0.69273743,
       0.68994413, 0.59776536, 0.67318436, 0.68435754, 0.68715084,
       0.69273743, 0.68715084, 0.68156425, 0.68435754, 0.68994413,
       0.68435754, 0.67597765, 0.67877095, 0.65083799, 0.68994413,
       0.67318436, 0.70111732, 0.68994413, 0.68994413, 0.67318436,
       0.67877095, 0.66759777, 0.67597765, 0.66480447, 0.66480447,
       0.58659218, 0.68156425, 0.67597765, 0.68715084, 0.67877095,
       0.67877095, 0.70111732, 0.67597765, 0.68435754, 0.68994413,
       0.68156425, 0.68156425, 0.66480447, 0.68156425, 0.68156425,
       0.68994413, 0.68715084, 0.68994413, 0.68994413, 0.68715084,
       0.68435754, 0.68715084, 0.68156425, 0.68435754, 0.63407821,
       0.68435754, 0.67318436, 0.68156425, 0.67877095, 0.67597765,
       0.67877095, 0.67597765, 0.67597765, 0.67597765, 0.66759777,
       0.67039106, 0.66480447, 0.67597765, 0.68435754, 0.67877095,
       0.67597765, 0.67318436, 0.66480447, 0.66759777, 0.67039106,
       0.65921788, 0.65921788, 0.65921788, 0.58100559, 0.69832402,
       0.70111732, 0.67318436, 0.70670391, 0.69832402, 0.69832402,
       0.69553073, 0.69553073, 0.70670391, 0.70111732, 0.68994413,
       0.68715084, 0.69832402, 0.70670391, 0.70391061, 0.69273743,
       0.68994413, 0.68435754, 0.69273743, 0.68994413, 0.68994413,
       0.68435754, 0.68715084, 0.60335196, 0.68715084, 0.70391061,
       0.69273743, 0.69553073, 0.68435754, 0.67318436, 0.68994413,
       0.68994413, 0.70111732, 0.68994413, 0.68715084, 0.68715084,
       0.70670391, 0.70670391, 0.68994413, 0.69273743, 0.68715084,
       0.68435754, 0.68994413, 0.69273743, 0.68435754, 0.68715084,
       0.68715084]), 'split5_test_score': array([0.52513966, 0.68435754, 0.68994413, 0.68994413, 0.69553073,
       0.69273743, 0.70111732, 0.69832402, 0.68994413, 0.69832402,
       0.68994413, 0.69273743, 0.69553073, 0.68435754, 0.69273743,
       0.68715084, 0.70111732, 0.69832402, 0.69273743, 0.69553073,
       0.69553073, 0.69273743, 0.69273743, 0.69553073, 0.52234637,
       0.68435754, 0.69273743, 0.68715084, 0.69832402, 0.69273743,
       0.70111732, 0.69832402, 0.68994413, 0.70391061, 0.68994413,
       0.69273743, 0.69273743, 0.68715084, 0.69273743, 0.68994413,
       0.69832402, 0.69832402, 0.68994413, 0.69553073, 0.69273743,
       0.69553073, 0.68994413, 0.68994413, 0.65363128, 0.7150838 ,
       0.7122905 , 0.69553073, 0.69273743, 0.69832402, 0.7122905 ,
       0.70949721, 0.70670391, 0.71787709, 0.7150838 , 0.7150838 ,
       0.69553073, 0.70391061, 0.70391061, 0.72067039, 0.70670391,
       0.7122905 , 0.7150838 , 0.72346369, 0.72346369, 0.72067039,
       0.70949721, 0.7122905 , 0.65921788, 0.70111732, 0.69553073,
       0.69273743, 0.70670391, 0.70949721, 0.7122905 , 0.72905028,
       0.7150838 , 0.72067039, 0.72346369, 0.72625698, 0.68994413,
       0.70391061, 0.69553073, 0.72346369, 0.71787709, 0.7150838 ,
       0.72067039, 0.72625698, 0.72905028, 0.70949721, 0.70949721,
       0.70949721, 0.67877095, 0.69832402, 0.70111732, 0.69553073,
       0.69553073, 0.70391061, 0.70670391, 0.70949721, 0.70111732,
       0.69832402, 0.70391061, 0.69832402, 0.70391061, 0.70111732,
       0.67877095, 0.68156425, 0.70670391, 0.70949721, 0.70111732,
       0.69273743, 0.68435754, 0.69553073, 0.70111732, 0.70111732,
       0.70111732, 0.70111732, 0.70111732, 0.70391061, 0.70111732,
       0.70949721, 0.7122905 , 0.68994413, 0.69273743, 0.69832402,
       0.69553073, 0.69832402, 0.69273743, 0.70391061, 0.66759777,
       0.68156425, 0.69553073, 0.69553073, 0.68156425, 0.69273743,
       0.69553073, 0.69832402, 0.69832402, 0.69832402, 0.50558659,
       0.50558659, 0.51396648, 0.62569832, 0.69273743, 0.69273743,
       0.68715084, 0.69273743, 0.68435754, 0.69832402, 0.68994413,
       0.69273743, 0.69273743, 0.6452514 , 0.6452514 , 0.69553073,
       0.68994413, 0.69273743, 0.68994413, 0.69273743, 0.68994413,
       0.68994413, 0.68994413, 0.68435754, 0.50558659, 0.50558659,
       0.51117318, 0.68994413, 0.69273743, 0.69273743, 0.68156425,
       0.68994413, 0.69273743, 0.68156425, 0.68715084, 0.68156425,
       0.50558659, 0.68435754, 0.65642458, 0.68994413, 0.69273743,
       0.69273743, 0.68994413, 0.67877095, 0.67877095, 0.67877095,
       0.67877095, 0.67877095, 0.54748603, 0.67039106, 0.68994413,
       0.70949721, 0.7150838 , 0.7122905 , 0.69832402, 0.71787709,
       0.7150838 , 0.70111732, 0.70949721, 0.7150838 , 0.70670391,
       0.69553073, 0.68435754, 0.73184358, 0.70391061, 0.70391061,
       0.71787709, 0.7150838 , 0.70111732, 0.70949721, 0.73184358,
       0.71787709, 0.55027933, 0.67039106, 0.68994413, 0.69832402,
       0.7150838 , 0.70670391, 0.70949721, 0.70949721, 0.7150838 ,
       0.70670391, 0.70670391, 0.7122905 , 0.68715084, 0.68435754,
       0.68156425, 0.7122905 , 0.69832402, 0.69832402, 0.70949721,
       0.69832402, 0.70391061, 0.72067039, 0.72067039, 0.71787709,
       0.55027933, 0.69832402, 0.7122905 , 0.70949721, 0.72067039,
       0.70391061, 0.7150838 , 0.72067039, 0.7122905 , 0.71787709,
       0.71787709, 0.7150838 , 0.72067039, 0.70949721, 0.69832402,
       0.7150838 , 0.7150838 , 0.70949721, 0.72067039, 0.72346369,
       0.72067039, 0.70391061, 0.7150838 , 0.7150838 , 0.5726257 ,
       0.71787709, 0.72067039, 0.70670391, 0.71787709, 0.72067039,
       0.70111732, 0.72067039, 0.73184358, 0.7150838 , 0.7122905 ,
       0.72346369, 0.72346369, 0.7122905 , 0.7150838 , 0.72625698,
       0.72067039, 0.72067039, 0.72067039, 0.72067039, 0.72346369,
       0.70670391, 0.70670391, 0.70670391, 0.54469274, 0.70670391,
       0.72346369, 0.69553073, 0.72067039, 0.70670391, 0.70391061,
       0.70670391, 0.69832402, 0.68994413, 0.70391061, 0.69553073,
       0.70391061, 0.7150838 , 0.7122905 , 0.69553073, 0.7150838 ,
       0.70949721, 0.69553073, 0.70670391, 0.70111732, 0.69553073,
       0.69553073, 0.69832402, 0.5726257 , 0.70391061, 0.7122905 ,
       0.7122905 , 0.7122905 , 0.69832402, 0.70949721, 0.70391061,
       0.68994413, 0.70111732, 0.69553073, 0.69273743, 0.7150838 ,
       0.71787709, 0.7122905 , 0.69832402, 0.70949721, 0.70391061,
       0.69553073, 0.70111732, 0.70391061, 0.70111732, 0.70111732,
       0.70391061]), 'split6_test_score': array([0.54469274, 0.68156425, 0.66759777, 0.67318436, 0.67597765,
       0.67597765, 0.66759777, 0.67318436, 0.66480447, 0.67318436,
       0.65921788, 0.66201117, 0.67318436, 0.67039106, 0.67039106,
       0.67318436, 0.67039106, 0.67039106, 0.66480447, 0.66201117,
       0.66201117, 0.66201117, 0.65921788, 0.66201117, 0.51396648,
       0.68994413, 0.67039106, 0.67318436, 0.67597765, 0.67597765,
       0.67877095, 0.67039106, 0.66759777, 0.66201117, 0.66201117,
       0.65921788, 0.67318436, 0.67318436, 0.66480447, 0.66201117,
       0.66480447, 0.66480447, 0.65921788, 0.65921788, 0.66201117,
       0.66201117, 0.66201117, 0.66201117, 0.60055866, 0.62849162,
       0.63687151, 0.60893855, 0.59497207, 0.63128492, 0.60893855,
       0.62849162, 0.65363128, 0.66201117, 0.61173184, 0.6396648 ,
       0.6452514 , 0.65083799, 0.59217877, 0.65642458, 0.59776536,
       0.60055866, 0.6396648 , 0.6396648 , 0.6396648 , 0.6452514 ,
       0.63407821, 0.6424581 , 0.60055866, 0.61731844, 0.63407821,
       0.60614525, 0.60335196, 0.62569832, 0.62011173, 0.6396648 ,
       0.6424581 , 0.65363128, 0.63128492, 0.6396648 , 0.6452514 ,
       0.6452514 , 0.59497207, 0.65921788, 0.61731844, 0.60614525,
       0.6452514 , 0.6396648 , 0.6396648 , 0.64804469, 0.64804469,
       0.64804469, 0.57821229, 0.59217877, 0.59217877, 0.57821229,
       0.58938547, 0.62290503, 0.63128492, 0.65363128, 0.65083799,
       0.65363128, 0.6424581 , 0.65921788, 0.63407821, 0.63407821,
       0.56424581, 0.66480447, 0.63128492, 0.63128492, 0.66759777,
       0.66759777, 0.66759777, 0.66201117, 0.67039106, 0.67877095,
       0.57541899, 0.58938547, 0.58659218, 0.57821229, 0.59776536,
       0.60614525, 0.6396648 , 0.6396648 , 0.6424581 , 0.67318436,
       0.6424581 , 0.65363128, 0.66201117, 0.63407821, 0.56703911,
       0.68156425, 0.63687151, 0.63128492, 0.66759777, 0.66759777,
       0.66201117, 0.66759777, 0.66759777, 0.66759777, 0.50558659,
       0.50558659, 0.50837989, 0.52513966, 0.66759777, 0.65921788,
       0.67318436, 0.66201117, 0.6396648 , 0.67318436, 0.6452514 ,
       0.64804469, 0.50558659, 0.57541899, 0.55586592, 0.65083799,
       0.64804469, 0.6452514 , 0.64804469, 0.65083799, 0.64804469,
       0.64804469, 0.65363128, 0.65642458, 0.48882682, 0.5027933 ,
       0.51955307, 0.64804469, 0.65083799, 0.65083799, 0.65921788,
       0.65642458, 0.65083799, 0.65921788, 0.65642458, 0.65642458,
       0.50558659, 0.62290503, 0.55586592, 0.64804469, 0.65083799,
       0.64804469, 0.65921788, 0.66201117, 0.66201117, 0.66201117,
       0.66201117, 0.66201117, 0.5726257 , 0.62011173, 0.61731844,
       0.63128492, 0.63128492, 0.6424581 , 0.66480447, 0.66480447,
       0.66759777, 0.65083799, 0.66759777, 0.66480447, 0.63407821,
       0.61173184, 0.61173184, 0.6452514 , 0.62290503, 0.6396648 ,
       0.67318436, 0.66201117, 0.66201117, 0.67318436, 0.67318436,
       0.67039106, 0.56424581, 0.61173184, 0.61452514, 0.63128492,
       0.6424581 , 0.65642458, 0.6396648 , 0.65642458, 0.66480447,
       0.65642458, 0.68156425, 0.67877095, 0.6396648 , 0.60893855,
       0.60893855, 0.65642458, 0.63407821, 0.63407821, 0.66759777,
       0.66201117, 0.67039106, 0.67318436, 0.67597765, 0.68156425,
       0.54469274, 0.60614525, 0.62849162, 0.62011173, 0.62569832,
       0.65363128, 0.66480447, 0.66480447, 0.66480447, 0.66201117,
       0.66759777, 0.66201117, 0.6396648 , 0.61173184, 0.60055866,
       0.64804469, 0.62569832, 0.63407821, 0.66759777, 0.66201117,
       0.65921788, 0.67039106, 0.67597765, 0.66480447, 0.53910615,
       0.59497207, 0.61173184, 0.60893855, 0.63687151, 0.64804469,
       0.65083799, 0.6452514 , 0.65363128, 0.6452514 , 0.65083799,
       0.66480447, 0.62569832, 0.62569832, 0.60614525, 0.6396648 ,
       0.63407821, 0.63407821, 0.66201117, 0.65083799, 0.64804469,
       0.65363128, 0.65363128, 0.65363128, 0.53351955, 0.58938547,
       0.59217877, 0.58379888, 0.60614525, 0.62011173, 0.60335196,
       0.62290503, 0.62290503, 0.61452514, 0.61452514, 0.62569832,
       0.62290503, 0.59776536, 0.58100559, 0.60893855, 0.59217877,
       0.59497207, 0.6396648 , 0.61452514, 0.61173184, 0.62849162,
       0.62011173, 0.62290503, 0.52513966, 0.60335196, 0.59776536,
       0.60335196, 0.60893855, 0.61452514, 0.60335196, 0.61173184,
       0.62011173, 0.60893855, 0.61173184, 0.63128492, 0.62569832,
       0.59497207, 0.59497207, 0.60055866, 0.59497207, 0.59217877,
       0.6452514 , 0.61731844, 0.61173184, 0.62569832, 0.62569832,
       0.62849162]), 'mean_test_score': array([0.53407732, 0.68035074, 0.67198087, 0.67477083, 0.68035074,
       0.67596652, 0.6807493 , 0.67676365, 0.67636509, 0.67716222,
       0.67397369, 0.67477083, 0.67198087, 0.67118374, 0.67716222,
       0.67556796, 0.67636509, 0.67676365, 0.67676365, 0.67357513,
       0.67477083, 0.67716222, 0.67596652, 0.67477083, 0.5296931 ,
       0.67756078, 0.67676365, 0.67596652, 0.67835791, 0.67716222,
       0.68035074, 0.67596652, 0.67636509, 0.67795935, 0.67636509,
       0.67477083, 0.67317656, 0.67397369, 0.67437226, 0.67477083,
       0.67676365, 0.67556796, 0.67477083, 0.67437226, 0.67556796,
       0.67676365, 0.67556796, 0.67516939, 0.64248705, 0.65962535,
       0.6624153 , 0.65045835, 0.6556397 , 0.66600239, 0.66042248,
       0.66560383, 0.67118374, 0.67477083, 0.66281387, 0.663611  ,
       0.65962535, 0.67198087, 0.66161817, 0.672778  , 0.66082104,
       0.66281387, 0.66520526, 0.66839378, 0.66799522, 0.67078517,
       0.66799522, 0.66998804, 0.64168992, 0.66600239, 0.67078517,
       0.65005978, 0.65922678, 0.66919091, 0.66879235, 0.672778  ,
       0.67038661, 0.67636509, 0.66998804, 0.67198087, 0.66839378,
       0.67477083, 0.66201674, 0.66879235, 0.6624153 , 0.65962535,
       0.66958948, 0.66879235, 0.6715823 , 0.672778  , 0.672778  ,
       0.672778  , 0.64208848, 0.65803109, 0.65763252, 0.64248705,
       0.65085692, 0.66440813, 0.66281387, 0.67237943, 0.67237943,
       0.6624153 , 0.66958948, 0.67437226, 0.67795935, 0.66640096,
       0.63889996, 0.67556796, 0.66879235, 0.66560383, 0.67716222,
       0.67437226, 0.67437226, 0.66201674, 0.6715823 , 0.672778  ,
       0.64168992, 0.65882822, 0.66002391, 0.63850139, 0.65245118,
       0.66281387, 0.66201674, 0.66998804, 0.66879235, 0.66958948,
       0.66679952, 0.67397369, 0.67636509, 0.66879235, 0.64208848,
       0.67317656, 0.66640096, 0.66161817, 0.67437226, 0.67477083,
       0.67516939, 0.66799522, 0.66799522, 0.66799522, 0.50617776,
       0.51335193, 0.53049024, 0.6189717 , 0.67397369, 0.67516939,
       0.67556796, 0.66879235, 0.66919091, 0.68035074, 0.66958948,
       0.67118374, 0.6189717 , 0.62056596, 0.61339179, 0.67477083,
       0.67437226, 0.6715823 , 0.67357513, 0.67198087, 0.67078517,
       0.67198087, 0.67397369, 0.67357513, 0.50099641, 0.52012754,
       0.5229175 , 0.67357513, 0.67397369, 0.67397369, 0.67317656,
       0.67317656, 0.67357513, 0.67317656, 0.67357513, 0.672778  ,
       0.50617776, 0.65683539, 0.63491431, 0.67437226, 0.672778  ,
       0.672778  , 0.67437226, 0.67317656, 0.67317656, 0.67317656,
       0.67317656, 0.67317656, 0.55559984, 0.65763252, 0.66082104,
       0.66002391, 0.66759665, 0.66879235, 0.67477083, 0.67357513,
       0.67596652, 0.6715823 , 0.67516939, 0.67556796, 0.6624153 ,
       0.66440813, 0.6556397 , 0.67078517, 0.66400957, 0.66799522,
       0.67477083, 0.67437226, 0.67437226, 0.67756078, 0.68234356,
       0.67835791, 0.56596253, 0.65364687, 0.65842965, 0.65922678,
       0.672778  , 0.67556796, 0.66958948, 0.67835791, 0.681945  ,
       0.67596652, 0.67756078, 0.67915504, 0.65803109, 0.65962535,
       0.65364687, 0.67676365, 0.66879235, 0.67237943, 0.67397369,
       0.67716222, 0.67795935, 0.67835791, 0.67875648, 0.67835791,
       0.56875249, 0.66042248, 0.66600239, 0.66281387, 0.66839378,
       0.67516939, 0.67636509, 0.67118374, 0.67477083, 0.67556796,
       0.672778  , 0.67596652, 0.66998804, 0.66839378, 0.65245118,
       0.67437226, 0.6648067 , 0.66719809, 0.67636509, 0.67477083,
       0.67596652, 0.67556796, 0.67915504, 0.67795935, 0.58549223,
       0.66121961, 0.66600239, 0.65882822, 0.67118374, 0.67795935,
       0.67198087, 0.67198087, 0.67397369, 0.67317656, 0.66958948,
       0.67556796, 0.67357513, 0.66759665, 0.65803109, 0.66958948,
       0.663611  , 0.66440813, 0.67636509, 0.67437226, 0.67357513,
       0.66719809, 0.66719809, 0.66719809, 0.55480271, 0.66560383,
       0.67118374, 0.65205261, 0.67596652, 0.67795935, 0.66640096,
       0.67397369, 0.67636509, 0.66799522, 0.67477083, 0.67437226,
       0.66560383, 0.66679952, 0.65922678, 0.66520526, 0.66679952,
       0.66600239, 0.66879235, 0.67237943, 0.67038661, 0.66998804,
       0.66958948, 0.67078517, 0.5663611 , 0.66042248, 0.67078517,
       0.65643683, 0.67477083, 0.672778  , 0.66281387, 0.672778  ,
       0.66958948, 0.66719809, 0.66958948, 0.67038661, 0.67397369,
       0.66719809, 0.66161817, 0.66520526, 0.66201674, 0.66321244,
       0.67198087, 0.66958948, 0.67078517, 0.67078517, 0.672778  ,
       0.672778  ]), 'std_test_score': array([0.0126684 , 0.01360166, 0.01485549, 0.01738347, 0.01413201,
       0.01330891, 0.01387051, 0.01405031, 0.01233275, 0.01299609,
       0.01308794, 0.01326824, 0.01527338, 0.01491595, 0.01744315,
       0.01181025, 0.01697206, 0.01462002, 0.01420594, 0.01620657,
       0.01586491, 0.01480349, 0.01513234, 0.01650497, 0.02442322,
       0.01586574, 0.01367482, 0.01610158, 0.01566918, 0.01243254,
       0.01265048, 0.01391515, 0.0122725 , 0.01600254, 0.01215163,
       0.01497302, 0.0134241 , 0.01501435, 0.0167735 , 0.01362592,
       0.01588341, 0.01492432, 0.01373586, 0.01621175, 0.01471643,
       0.01433145, 0.01380629, 0.01404209, 0.02202519, 0.02725343,
       0.02526047, 0.0259712 , 0.03194691, 0.02764039, 0.03301137,
       0.02938748, 0.0274822 , 0.02518486, 0.03824036, 0.03362772,
       0.01703642, 0.01935198, 0.03297655, 0.03160108, 0.03746265,
       0.036455  , 0.02928945, 0.03094967, 0.03186155, 0.02350034,
       0.02475938, 0.02374979, 0.02295957, 0.02326961, 0.01725666,
       0.02761158, 0.03004179, 0.02593851, 0.03050191, 0.03337585,
       0.03153061, 0.02581934, 0.03673066, 0.03593824, 0.02615639,
       0.02491666, 0.03585171, 0.02943761, 0.03479764, 0.03751635,
       0.02957613, 0.03169085, 0.03245827, 0.02221756, 0.02221756,
       0.02221756, 0.03953749, 0.03682801, 0.03567372, 0.04989146,
       0.04605837, 0.03486504, 0.03355325, 0.02627878, 0.02586539,
       0.02848577, 0.03045887, 0.02329198, 0.02422497, 0.02490961,
       0.04713803, 0.01562427, 0.03120196, 0.03360444, 0.02002035,
       0.01934397, 0.01844268, 0.02864382, 0.02165423, 0.0226553 ,
       0.0492944 , 0.03873152, 0.03794052, 0.05332777, 0.0446584 ,
       0.03683379, 0.03849975, 0.0256256 , 0.02441281, 0.02895313,
       0.02561639, 0.0246948 , 0.01501699, 0.02321895, 0.04772812,
       0.01866531, 0.02422903, 0.02850736, 0.01790959, 0.0196885 ,
       0.0190887 , 0.02109078, 0.02109078, 0.02109078, 0.00068167,
       0.01220695, 0.03369462, 0.04558459, 0.01171444, 0.01356696,
       0.01434076, 0.01625853, 0.01766231, 0.01207799, 0.01665743,
       0.01656966, 0.07542394, 0.04473086, 0.04905762, 0.01864116,
       0.01653112, 0.01727879, 0.01729219, 0.01614649, 0.01545925,
       0.01556043, 0.01415183, 0.01380762, 0.00815716, 0.03238856,
       0.03363286, 0.01922326, 0.01779704, 0.01779704, 0.01406588,
       0.01391415, 0.01750678, 0.01406588, 0.01509158, 0.01448897,
       0.00068167, 0.02331644, 0.03613392, 0.01915386, 0.01786146,
       0.01812986, 0.0142689 , 0.01350046, 0.01350046, 0.01350046,
       0.01350046, 0.01350046, 0.01132685, 0.01940668, 0.02432115,
       0.02395197, 0.02451664, 0.02030491, 0.01205063, 0.0226804 ,
       0.02042196, 0.02095065, 0.01759642, 0.01991165, 0.02024537,
       0.02768938, 0.02709611, 0.02775944, 0.02245079, 0.01987276,
       0.02240358, 0.01970791, 0.0165773 , 0.02068141, 0.02375369,
       0.02092938, 0.02258545, 0.02141066, 0.02411855, 0.02372506,
       0.02361262, 0.01905452, 0.02033368, 0.01762052, 0.01828296,
       0.01553151, 0.0149597 , 0.01655526, 0.01500482, 0.02581621,
       0.02432796, 0.02213576, 0.02114568, 0.02071267, 0.01906576,
       0.01347121, 0.01428863, 0.01949759, 0.02102635, 0.02113602,
       0.01816251, 0.02890878, 0.02326855, 0.02628705, 0.027242  ,
       0.0173541 , 0.02334156, 0.02346465, 0.02069719, 0.02344915,
       0.02158964, 0.02149494, 0.02559744, 0.02862252, 0.02934202,
       0.02156479, 0.02745559, 0.02444174, 0.02519916, 0.0247616 ,
       0.0250028 , 0.01975152, 0.02234163, 0.02296209, 0.03565229,
       0.03694806, 0.02973734, 0.02818324, 0.02418209, 0.02443573,
       0.01766138, 0.0237853 , 0.02768388, 0.0213432 , 0.02141108,
       0.02399468, 0.02904638, 0.02359306, 0.03429202, 0.02608796,
       0.02644433, 0.02719857, 0.02428257, 0.02687908, 0.02715255,
       0.01897121, 0.01897121, 0.01897121, 0.01466172, 0.03828262,
       0.03844136, 0.03233287, 0.03541198, 0.02812479, 0.03248786,
       0.02657859, 0.0245486 , 0.03010995, 0.02813359, 0.02256795,
       0.02612622, 0.03529024, 0.04311776, 0.0304565 , 0.03593667,
       0.03510282, 0.01795514, 0.02849349, 0.02793789, 0.02400971,
       0.0237637 , 0.02415113, 0.02560373, 0.0320943 , 0.03635515,
       0.03567365, 0.03235066, 0.02752462, 0.02932993, 0.02998759,
       0.02308292, 0.02996745, 0.02846276, 0.0199962 , 0.02554266,
       0.03768073, 0.03910453, 0.02993228, 0.0345637 , 0.0337126 ,
       0.01617508, 0.02633976, 0.0287276 , 0.02440895, 0.02605328,
       0.02525921]), 'rank_test_score': array([328,   4, 154,  73,   4,  48,   3,  31,  38,  25, 104,  73, 154,
       167,  25,  57,  38,  31,  31, 115,  73,  25,  48,  73, 330,  22,
        31,  48,  11,  25,   4,  48,  38,  16,  38,  73, 124, 104,  90,
        73,  31,  57,  73,  90,  57,  31,  57,  68, 309, 282, 263, 307,
       299, 237, 277, 242, 167,  73, 257, 254, 282, 154, 271, 135, 275,
       257, 246, 212, 216, 173, 216, 184, 313, 237, 173, 308, 286, 200,
       202, 135, 181,  38, 184, 154, 212,  73, 267, 202, 263, 282, 189,
       202, 163, 135, 135, 135, 311, 292, 295, 309, 306, 250, 257, 150,
       150, 263, 189,  90,  16, 234, 315,  57, 202, 242,  25,  90,  90,
       267, 163, 135, 313, 289, 280, 316, 303, 257, 267, 184, 202, 189,
       231, 104,  38, 202, 311, 124, 234, 271,  90,  73,  68, 216, 216,
       216, 334, 333, 329, 319, 104,  68,  57, 202, 200,   4, 189, 167,
       319, 318, 321,  73,  90, 163, 115, 154, 173, 154, 104, 115, 336,
       332, 331, 115, 104, 104, 124, 124, 115, 124, 115, 135, 334, 297,
       317,  90, 135, 135,  90, 124, 124, 124, 124, 124, 326, 295, 275,
       280, 223, 202,  73, 115,  48, 163,  68,  57, 263, 250, 299, 173,
       253, 216,  73,  90,  90,  22,   1,  11, 325, 301, 291, 286, 135,
        57, 189,  11,   2,  48,  22,   8, 292, 282, 301,  31, 202, 150,
       104,  25,  16,  11,  10,  11, 323, 277, 237, 257, 212,  68,  38,
       167,  73,  57, 135,  48, 184, 212, 303,  90, 249, 225,  38,  73,
        48,  57,   8,  16, 322, 274, 237, 289, 167,  16, 154, 154, 104,
       124, 189,  57, 115, 223, 292, 189, 254, 250,  38,  90, 115, 225,
       225, 225, 327, 242, 167, 305,  48,  16, 234, 104,  38, 216,  73,
        90, 242, 231, 286, 246, 231, 237, 202, 150, 181, 184, 189, 173,
       324, 277, 173, 298,  73, 135, 257, 135, 189, 225, 189, 181, 104,
       225, 271, 246, 267, 256, 154, 189, 173, 173, 135, 135], dtype=int32), 'split0_train_score': array([0.51116279, 0.6744186 , 0.67255814, 0.67023256, 0.67116279,
       0.67255814, 0.67813953, 0.6744186 , 0.67348837, 0.67395349,
       0.67209302, 0.67395349, 0.67302326, 0.67348837, 0.67534884,
       0.67395349, 0.67209302, 0.67395349, 0.67255814, 0.67069767,
       0.67162791, 0.67488372, 0.67162791, 0.67069767, 0.54093023,
       0.67674419, 0.67116279, 0.67209302, 0.67302326, 0.67581395,
       0.67627907, 0.67302326, 0.6744186 , 0.67534884, 0.6744186 ,
       0.67348837, 0.67302326, 0.67255814, 0.67255814, 0.67395349,
       0.67395349, 0.67348837, 0.67255814, 0.67255814, 0.67209302,
       0.67255814, 0.67162791, 0.67162791, 0.71581395, 0.72139535,
       0.72697674, 0.7027907 , 0.70790698, 0.70744186, 0.7       ,
       0.70093023, 0.70325581, 0.69906977, 0.6944186 , 0.70046512,
       0.70837209, 0.71860465, 0.72046512, 0.69860465, 0.70093023,
       0.7       , 0.69488372, 0.68837209, 0.68930233, 0.6772093 ,
       0.68651163, 0.69023256, 0.71534884, 0.72465116, 0.72511628,
       0.70651163, 0.70511628, 0.70697674, 0.6972093 , 0.70046512,
       0.70186047, 0.7027907 , 0.69395349, 0.70046512, 0.72744186,
       0.7227907 , 0.71302326, 0.69534884, 0.7       , 0.69860465,
       0.69488372, 0.69209302, 0.68604651, 0.69116279, 0.69116279,
       0.69116279, 0.66186047, 0.67255814, 0.67069767, 0.65255814,
       0.66511628, 0.67395349, 0.66930233, 0.67581395, 0.68186047,
       0.67162791, 0.67209302, 0.6772093 , 0.69069767, 0.67906977,
       0.65674419, 0.68093023, 0.67488372, 0.67302326, 0.68139535,
       0.68139535, 0.68325581, 0.67116279, 0.67302326, 0.67395349,
       0.65953488, 0.66883721, 0.66930233, 0.65906977, 0.66465116,
       0.6744186 , 0.66372093, 0.67813953, 0.68186047, 0.67069767,
       0.67395349, 0.67953488, 0.68744186, 0.68186047, 0.65674419,
       0.6827907 , 0.67581395, 0.6744186 , 0.68372093, 0.68186047,
       0.68139535, 0.67348837, 0.67348837, 0.67348837, 0.50604651,
       0.5227907 , 0.61162791, 0.58837209, 0.67302326, 0.67069767,
       0.67860465, 0.67348837, 0.67302326, 0.6772093 , 0.67581395,
       0.67348837, 0.60511628, 0.66697674, 0.64976744, 0.67116279,
       0.67767442, 0.67534884, 0.66883721, 0.67627907, 0.67488372,
       0.67534884, 0.6772093 , 0.67906977, 0.50604651, 0.5372093 ,
       0.53209302, 0.67023256, 0.67348837, 0.67348837, 0.68093023,
       0.67255814, 0.66930233, 0.68093023, 0.68046512, 0.68093023,
       0.50604651, 0.65860465, 0.64930233, 0.67209302, 0.67906977,
       0.67906977, 0.67348837, 0.68093023, 0.68093023, 0.68093023,
       0.68093023, 0.68093023, 0.73627907, 0.83209302, 0.82837209,
       0.82372093, 0.84930233, 0.84883721, 0.84604651, 0.85534884,
       0.85255814, 0.84837209, 0.84883721, 0.84604651, 0.81023256,
       0.8172093 , 0.82465116, 0.83162791, 0.84325581, 0.84976744,
       0.83023256, 0.84      , 0.84372093, 0.83767442, 0.84372093,
       0.84325581, 0.78093023, 0.85813953, 0.85813953, 0.88325581,
       0.89023256, 0.89534884, 0.89674419, 0.90093023, 0.90139535,
       0.90186047, 0.89813953, 0.8972093 , 0.85395349, 0.86      ,
       0.86093023, 0.86976744, 0.88976744, 0.89209302, 0.87627907,
       0.88790698, 0.88744186, 0.88883721, 0.88883721, 0.88837209,
       0.66883721, 0.72790698, 0.72697674, 0.72744186, 0.73395349,
       0.73860465, 0.73953488, 0.74139535, 0.74      , 0.74697674,
       0.74883721, 0.7427907 , 0.72697674, 0.72093023, 0.71674419,
       0.73116279, 0.7372093 , 0.73395349, 0.74465116, 0.75209302,
       0.74883721, 0.74837209, 0.75255814, 0.75116279, 0.66232558,
       0.72232558, 0.72093023, 0.7344186 , 0.73023256, 0.73023256,
       0.73767442, 0.73906977, 0.74      , 0.74930233, 0.7455814 ,
       0.74372093, 0.73627907, 0.72465116, 0.71906977, 0.72744186,
       0.73348837, 0.73302326, 0.7427907 , 0.74651163, 0.74511628,
       0.74790698, 0.74790698, 0.74790698, 0.63209302, 0.71767442,
       0.70697674, 0.7055814 , 0.71116279, 0.71209302, 0.71116279,
       0.70883721, 0.70837209, 0.70976744, 0.70790698, 0.70744186,
       0.70883721, 0.70139535, 0.69860465, 0.69813953, 0.69813953,
       0.69953488, 0.69627907, 0.70046512, 0.7027907 , 0.6972093 ,
       0.70186047, 0.70093023, 0.63627907, 0.71348837, 0.70883721,
       0.69860465, 0.70930233, 0.70976744, 0.70604651, 0.7055814 ,
       0.70837209, 0.70651163, 0.70418605, 0.70511628, 0.70604651,
       0.70465116, 0.6972093 , 0.69581395, 0.69627907, 0.69581395,
       0.69348837, 0.69581395, 0.69813953, 0.69534884, 0.69674419,
       0.69767442]), 'split1_train_score': array([0.54465116, 0.68      , 0.67674419, 0.67627907, 0.67813953,
       0.67627907, 0.6827907 , 0.6772093 , 0.6772093 , 0.67860465,
       0.67813953, 0.67767442, 0.67674419, 0.67674419, 0.68      ,
       0.6772093 , 0.67906977, 0.67813953, 0.6744186 , 0.67581395,
       0.67581395, 0.67860465, 0.6772093 , 0.67674419, 0.54372093,
       0.68604651, 0.67906977, 0.67674419, 0.67906977, 0.67813953,
       0.68232558, 0.67906977, 0.67674419, 0.68      , 0.68      ,
       0.67674419, 0.67581395, 0.6772093 , 0.67906977, 0.67860465,
       0.67860465, 0.67860465, 0.67674419, 0.67627907, 0.6772093 ,
       0.67906977, 0.67813953, 0.67813953, 0.71023256, 0.72511628,
       0.73069767, 0.70465116, 0.71395349, 0.71627907, 0.70325581,
       0.71255814, 0.71302326, 0.69860465, 0.71069767, 0.70883721,
       0.71906977, 0.72139535, 0.72046512, 0.7       , 0.71023256,
       0.70837209, 0.6972093 , 0.70372093, 0.7       , 0.69534884,
       0.69813953, 0.69674419, 0.71813953, 0.71674419, 0.72139535,
       0.70744186, 0.71162791, 0.71162791, 0.71348837, 0.71162791,
       0.7144186 , 0.71534884, 0.70511628, 0.70604651, 0.72418605,
       0.72372093, 0.72      , 0.70139535, 0.70604651, 0.70651163,
       0.70139535, 0.70093023, 0.70046512, 0.69674419, 0.69674419,
       0.69674419, 0.66837209, 0.68093023, 0.68186047, 0.66651163,
       0.67953488, 0.68744186, 0.68232558, 0.68790698, 0.68651163,
       0.68604651, 0.68604651, 0.69023256, 0.68697674, 0.69162791,
       0.66604651, 0.69348837, 0.68883721, 0.68930233, 0.68697674,
       0.68976744, 0.68744186, 0.68046512, 0.68837209, 0.68465116,
       0.66418605, 0.68      , 0.67860465, 0.66511628, 0.68139535,
       0.68325581, 0.67860465, 0.69116279, 0.69116279, 0.68790698,
       0.69023256, 0.69023256, 0.69116279, 0.69116279, 0.66465116,
       0.69116279, 0.68976744, 0.68930233, 0.69255814, 0.69116279,
       0.68790698, 0.68930233, 0.68930233, 0.68930233, 0.50604651,
       0.54372093, 0.55627907, 0.64697674, 0.67860465, 0.6744186 ,
       0.68651163, 0.68139535, 0.67860465, 0.68232558, 0.67767442,
       0.6772093 , 0.67627907, 0.66186047, 0.65581395, 0.67581395,
       0.68093023, 0.67860465, 0.67395349, 0.67860465, 0.6772093 ,
       0.68325581, 0.68186047, 0.68046512, 0.55069767, 0.62186047,
       0.62418605, 0.67627907, 0.67348837, 0.67534884, 0.68093023,
       0.67302326, 0.67488372, 0.68093023, 0.68093023, 0.68093023,
       0.50604651, 0.67023256, 0.66139535, 0.67395349, 0.68093023,
       0.68139535, 0.67348837, 0.68232558, 0.68232558, 0.68232558,
       0.68232558, 0.68232558, 0.7427907 , 0.83674419, 0.83627907,
       0.82651163, 0.85023256, 0.85255814, 0.84465116, 0.85348837,
       0.84976744, 0.85395349, 0.84930233, 0.84651163, 0.81581395,
       0.82139535, 0.83116279, 0.82744186, 0.84325581, 0.84697674,
       0.83069767, 0.83953488, 0.84186047, 0.84      , 0.84186047,
       0.83953488, 0.77069767, 0.86372093, 0.86418605, 0.88465116,
       0.89674419, 0.90372093, 0.90790698, 0.90883721, 0.90511628,
       0.91302326, 0.90465116, 0.90186047, 0.86372093, 0.86418605,
       0.86744186, 0.87674419, 0.89348837, 0.89302326, 0.87953488,
       0.89162791, 0.89348837, 0.89255814, 0.89209302, 0.89162791,
       0.66186047, 0.73953488, 0.73674419, 0.73162791, 0.74976744,
       0.74651163, 0.7455814 , 0.74651163, 0.74744186, 0.74837209,
       0.74697674, 0.74651163, 0.73023256, 0.73209302, 0.73255814,
       0.74186047, 0.73767442, 0.74093023, 0.74976744, 0.74744186,
       0.74465116, 0.74790698, 0.75255814, 0.75767442, 0.66046512,
       0.73534884, 0.73395349, 0.73953488, 0.74093023, 0.74232558,
       0.74372093, 0.74418605, 0.74744186, 0.75395349, 0.74790698,
       0.74790698, 0.74046512, 0.73395349, 0.72418605, 0.73906977,
       0.74372093, 0.74139535, 0.74651163, 0.74465116, 0.74651163,
       0.75116279, 0.75116279, 0.75116279, 0.63116279, 0.73069767,
       0.7227907 , 0.72418605, 0.72      , 0.71953488, 0.71860465,
       0.71627907, 0.71581395, 0.7144186 , 0.70976744, 0.71348837,
       0.71069767, 0.70976744, 0.71023256, 0.70325581, 0.71255814,
       0.71209302, 0.70511628, 0.70883721, 0.70790698, 0.71162791,
       0.70837209, 0.70744186, 0.63162791, 0.71953488, 0.71906977,
       0.71395349, 0.7144186 , 0.71488372, 0.71627907, 0.71534884,
       0.71488372, 0.71860465, 0.71209302, 0.70976744, 0.71023256,
       0.71069767, 0.70930233, 0.70883721, 0.70883721, 0.70837209,
       0.70186047, 0.70465116, 0.70651163, 0.70232558, 0.70139535,
       0.70372093]), 'split2_train_score': array([0.52976744, 0.67767442, 0.67860465, 0.67581395, 0.68093023,
       0.67813953, 0.68186047, 0.68      , 0.67767442, 0.67953488,
       0.67813953, 0.6772093 , 0.67395349, 0.67674419, 0.6744186 ,
       0.67813953, 0.67767442, 0.68046512, 0.67627907, 0.67906977,
       0.67860465, 0.67674419, 0.67860465, 0.67813953, 0.53348837,
       0.67813953, 0.67813953, 0.67767442, 0.6827907 , 0.67860465,
       0.68046512, 0.68139535, 0.67813953, 0.68139535, 0.67767442,
       0.67813953, 0.67348837, 0.67581395, 0.67581395, 0.6772093 ,
       0.67813953, 0.68139535, 0.6772093 , 0.67767442, 0.67860465,
       0.67860465, 0.67906977, 0.67906977, 0.71348837, 0.72604651,
       0.7227907 , 0.69906977, 0.71116279, 0.71116279, 0.7027907 ,
       0.70883721, 0.70651163, 0.69534884, 0.70651163, 0.70604651,
       0.71255814, 0.72139535, 0.71627907, 0.69860465, 0.70697674,
       0.71069767, 0.6972093 , 0.69813953, 0.69581395, 0.69348837,
       0.69023256, 0.69302326, 0.71674419, 0.71767442, 0.72465116,
       0.70883721, 0.70883721, 0.71069767, 0.71348837, 0.70744186,
       0.71069767, 0.70930233, 0.70325581, 0.70465116, 0.72325581,
       0.72511628, 0.71906977, 0.70093023, 0.70697674, 0.70790698,
       0.70093023, 0.70186047, 0.70418605, 0.69581395, 0.69581395,
       0.69581395, 0.66511628, 0.67488372, 0.67209302, 0.66232558,
       0.67813953, 0.67953488, 0.67581395, 0.68465116, 0.6827907 ,
       0.68372093, 0.68232558, 0.68325581, 0.68418605, 0.68511628,
       0.66186047, 0.68790698, 0.68      , 0.68325581, 0.68372093,
       0.68511628, 0.68372093, 0.67767442, 0.68186047, 0.68093023,
       0.66604651, 0.67255814, 0.6744186 , 0.66883721, 0.67674419,
       0.67767442, 0.67813953, 0.68465116, 0.68139535, 0.67860465,
       0.68139535, 0.68372093, 0.68651163, 0.68604651, 0.65767442,
       0.68465116, 0.68325581, 0.68093023, 0.68697674, 0.68651163,
       0.6827907 , 0.68046512, 0.68046512, 0.68046512, 0.50604651,
       0.50604651, 0.51348837, 0.57395349, 0.68232558, 0.68046512,
       0.6855814 , 0.67767442, 0.67534884, 0.68511628, 0.6772093 ,
       0.67581395, 0.67534884, 0.65860465, 0.6227907 , 0.67906977,
       0.67860465, 0.67488372, 0.67860465, 0.6744186 , 0.67348837,
       0.67906977, 0.67627907, 0.67627907, 0.50604651, 0.50604651,
       0.50604651, 0.67348837, 0.6772093 , 0.67581395, 0.67488372,
       0.67581395, 0.67581395, 0.67488372, 0.67488372, 0.67488372,
       0.50604651, 0.65813953, 0.63767442, 0.67348837, 0.6744186 ,
       0.6744186 , 0.67488372, 0.67534884, 0.67534884, 0.67534884,
       0.67534884, 0.67534884, 0.74093023, 0.82976744, 0.82790698,
       0.8172093 , 0.84418605, 0.84651163, 0.83813953, 0.85116279,
       0.8427907 , 0.8427907 , 0.84325581, 0.84046512, 0.81209302,
       0.8144186 , 0.82      , 0.81627907, 0.83534884, 0.83627907,
       0.82744186, 0.83116279, 0.8344186 , 0.83627907, 0.8372093 ,
       0.84046512, 0.76232558, 0.86186047, 0.85860465, 0.87395349,
       0.88744186, 0.89116279, 0.8972093 , 0.89767442, 0.89627907,
       0.89906977, 0.89069767, 0.88883721, 0.85953488, 0.85953488,
       0.85813953, 0.85906977, 0.88651163, 0.88744186, 0.87023256,
       0.8772093 , 0.88093023, 0.88139535, 0.88093023, 0.87953488,
       0.65116279, 0.73162791, 0.72744186, 0.72465116, 0.74232558,
       0.74093023, 0.73674419, 0.74418605, 0.7427907 , 0.74837209,
       0.74744186, 0.74511628, 0.72186047, 0.72651163, 0.72186047,
       0.72883721, 0.72697674, 0.73116279, 0.74465116, 0.7455814 ,
       0.7427907 , 0.74976744, 0.7544186 , 0.75534884, 0.65116279,
       0.73209302, 0.73348837, 0.73162791, 0.74046512, 0.73627907,
       0.73534884, 0.73906977, 0.74186047, 0.74325581, 0.74325581,
       0.74604651, 0.73488372, 0.72790698, 0.72837209, 0.72744186,
       0.72744186, 0.73069767, 0.74651163, 0.7427907 , 0.74      ,
       0.74883721, 0.74883721, 0.74883721, 0.62790698, 0.71162791,
       0.71627907, 0.7055814 , 0.71162791, 0.71488372, 0.70697674,
       0.70930233, 0.71069767, 0.71162791, 0.71255814, 0.70883721,
       0.70837209, 0.70651163, 0.70465116, 0.69860465, 0.70930233,
       0.70883721, 0.69534884, 0.70697674, 0.70697674, 0.70465116,
       0.70465116, 0.70186047, 0.62046512, 0.71860465, 0.71813953,
       0.70604651, 0.70883721, 0.70697674, 0.70790698, 0.70697674,
       0.70697674, 0.70697674, 0.70604651, 0.70837209, 0.70883721,
       0.70511628, 0.7055814 , 0.7       , 0.7055814 , 0.70418605,
       0.69627907, 0.7027907 , 0.70511628, 0.70046512, 0.69860465,
       0.69813953]), 'split3_train_score': array([0.53695955, 0.68619247, 0.68247327, 0.68154347, 0.68107857,
       0.68154347, 0.68107857, 0.67921897, 0.68014877, 0.67828917,
       0.68014877, 0.67735937, 0.67968387, 0.67735937, 0.67921897,
       0.67735937, 0.67921897, 0.67875407, 0.67549977, 0.67596467,
       0.67642957, 0.67549977, 0.67642957, 0.67735937, 0.54021385,
       0.68200837, 0.68107857, 0.68293817, 0.68200837, 0.68154347,
       0.68107857, 0.67782427, 0.68107857, 0.67828917, 0.68061367,
       0.67689447, 0.67735937, 0.67549977, 0.67921897, 0.67735937,
       0.67828917, 0.67782427, 0.67689447, 0.67642957, 0.67735937,
       0.67782427, 0.67782427, 0.67782427, 0.71222687, 0.72663877,
       0.72710367, 0.70618317, 0.71734077, 0.71641097, 0.70990237,
       0.70711297, 0.70432357, 0.70525337, 0.70153417, 0.69967457,
       0.71269177, 0.72013017, 0.72431427, 0.69827987, 0.70339377,
       0.70711297, 0.69363087, 0.68758717, 0.68805207, 0.68944677,
       0.69316597, 0.69456067, 0.71966527, 0.72338447, 0.72803347,
       0.71455137, 0.71455137, 0.71222687, 0.70618317, 0.70339377,
       0.70339377, 0.70618317, 0.69920967, 0.70060437, 0.73035797,
       0.72570897, 0.72477917, 0.69363087, 0.70478847, 0.70432357,
       0.69084147, 0.68851697, 0.68898187, 0.69270107, 0.69270107,
       0.69270107, 0.65643887, 0.67317527, 0.66852627, 0.65922827,
       0.67456997, 0.67828917, 0.66852627, 0.68572757, 0.68386797,
       0.67364017, 0.68014877, 0.68014877, 0.68991167, 0.68154347,
       0.65597397, 0.68479777, 0.67642957, 0.67735937, 0.68340307,
       0.68200837, 0.68200837, 0.67364017, 0.68386797, 0.67782427,
       0.65783357, 0.66899117, 0.66527197, 0.65969317, 0.67224547,
       0.68061367, 0.67317527, 0.68340307, 0.68340307, 0.68479777,
       0.68107857, 0.68293817, 0.68619247, 0.68014877, 0.65690377,
       0.68340307, 0.67735937, 0.67549977, 0.68014877, 0.68247327,
       0.67968387, 0.68154347, 0.68154347, 0.68154347, 0.50627615,
       0.50627615, 0.51231985, 0.67456997, 0.67596467, 0.67596467,
       0.66573687, 0.67596467, 0.67456997, 0.68479777, 0.67178057,
       0.67410507, 0.50627615, 0.59321246, 0.60808926, 0.66992097,
       0.67410507, 0.67224547, 0.67178057, 0.67410507, 0.67364017,
       0.68200837, 0.67735937, 0.67689447, 0.50627615, 0.50627615,
       0.50627615, 0.67271037, 0.67317527, 0.67503487, 0.68200837,
       0.67828917, 0.67364017, 0.68200837, 0.68154347, 0.68154347,
       0.50627615, 0.65318457, 0.63365876, 0.67224547, 0.67735937,
       0.67735937, 0.67735937, 0.68154347, 0.68154347, 0.68154347,
       0.68154347, 0.68154347, 0.73547187, 0.83310088, 0.81961878,
       0.82519758, 0.84286378, 0.84797768, 0.84146908, 0.84332868,
       0.84286378, 0.84379358, 0.83774988, 0.83682008, 0.80753138,
       0.82752208, 0.82659228, 0.81775918, 0.83496048, 0.83682008,
       0.82426778, 0.82519758, 0.82473268, 0.82473268, 0.83077638,
       0.82752208, 0.77173408, 0.85960019, 0.85448629, 0.87633659,
       0.88563459, 0.88702929, 0.89028359, 0.89307299, 0.89167829,
       0.89121339, 0.88795909, 0.88563459, 0.85309159, 0.85216179,
       0.85774059, 0.85960019, 0.88145049, 0.88005579, 0.86424919,
       0.87354719, 0.87633659, 0.87401209, 0.87447699, 0.87354719,
       0.65504417, 0.73268247, 0.74012087, 0.73593677, 0.73593677,
       0.73593677, 0.73500697, 0.74430497, 0.74244537, 0.74337517,
       0.74291027, 0.74430497, 0.73779637, 0.73268247, 0.73454207,
       0.73454207, 0.73919107, 0.73500697, 0.74430497, 0.74709437,
       0.74709437, 0.74988377, 0.75685728, 0.75546258, 0.65225477,
       0.73454207, 0.73221757, 0.73221757, 0.73686657, 0.74058577,
       0.74151557, 0.74198047, 0.74616457, 0.74941887, 0.74616457,
       0.74569967, 0.74198047, 0.73268247, 0.73035797, 0.74105067,
       0.73686657, 0.73919107, 0.74384007, 0.74662947, 0.74802417,
       0.74244537, 0.74244537, 0.74244537, 0.63133426, 0.72431427,
       0.71966527, 0.71780567, 0.71827057, 0.71734077, 0.70850767,
       0.71594607, 0.71036727, 0.71083217, 0.71548117, 0.70804277,
       0.71315667, 0.71827057, 0.71222687, 0.70199907, 0.70850767,
       0.70618317, 0.69874477, 0.70339377, 0.70246397, 0.70106927,
       0.70339377, 0.70153417, 0.62529056, 0.72384937, 0.71873547,
       0.71222687, 0.71827057, 0.71594607, 0.70943747, 0.71036727,
       0.70943747, 0.71455137, 0.70711297, 0.70385867, 0.70664807,
       0.71269177, 0.71129707, 0.70060437, 0.70525337, 0.70432357,
       0.69549047, 0.70013947, 0.69967457, 0.70106927, 0.69735007,
       0.69781497]), 'split4_train_score': array([0.52254765, 0.67503487, 0.67689447, 0.67828917, 0.67549977,
       0.67503487, 0.67735937, 0.67735937, 0.67503487, 0.67642957,
       0.67642957, 0.67271037, 0.67085077, 0.67503487, 0.67317527,
       0.67503487, 0.67456997, 0.67642957, 0.66992097, 0.67085077,
       0.67178057, 0.67317527, 0.67131567, 0.67178057, 0.52301255,
       0.67689447, 0.67782427, 0.67364017, 0.67828917, 0.67549977,
       0.67456997, 0.67642957, 0.67503487, 0.67828917, 0.67642957,
       0.67317527, 0.67224547, 0.67364017, 0.67549977, 0.67364017,
       0.67596467, 0.67503487, 0.67410507, 0.66899117, 0.67224547,
       0.67178057, 0.67178057, 0.67131567, 0.69920967, 0.70990237,
       0.71501627, 0.69874477, 0.70246397, 0.70199907, 0.69827987,
       0.70339377, 0.70199907, 0.70199907, 0.70013947, 0.69688517,
       0.71734077, 0.71966527, 0.72105997, 0.68944677, 0.70106927,
       0.69967457, 0.68898187, 0.68851697, 0.68758717, 0.68572757,
       0.68712227, 0.68712227, 0.71083217, 0.71594607, 0.71269177,
       0.70339377, 0.70060437, 0.70618317, 0.69874477, 0.69642027,
       0.69967457, 0.70060437, 0.69270107, 0.69549047, 0.71641097,
       0.71315667, 0.71222687, 0.69084147, 0.69642027, 0.69920967,
       0.68851697, 0.68991167, 0.68805207, 0.68572757, 0.68572757,
       0.68572757, 0.65783357, 0.67178057, 0.67085077, 0.66806137,
       0.66945607, 0.67410507, 0.67875407, 0.68061367, 0.68107857,
       0.68293817, 0.68247327, 0.68293817, 0.68293817, 0.67828917,
       0.65783357, 0.68154347, 0.67642957, 0.67689447, 0.68340307,
       0.68665737, 0.68805207, 0.68293817, 0.68061367, 0.68293817,
       0.65969317, 0.66899117, 0.66806137, 0.66108787, 0.66480707,
       0.67317527, 0.68061367, 0.68154347, 0.68247327, 0.68200837,
       0.68247327, 0.68247327, 0.67968387, 0.67549977, 0.65597397,
       0.67596467, 0.67828917, 0.67782427, 0.68247327, 0.68479777,
       0.68200837, 0.68247327, 0.68247327, 0.68247327, 0.50627615,
       0.50627615, 0.50627615, 0.61180846, 0.65504417, 0.67317527,
       0.67782427, 0.67503487, 0.67364017, 0.67735937, 0.67503487,
       0.67317527, 0.67178057, 0.56392376, 0.52859135, 0.67456997,
       0.67549977, 0.67271037, 0.67364017, 0.67410507, 0.67410507,
       0.67503487, 0.67642957, 0.67271037, 0.50627615, 0.50627615,
       0.50627615, 0.66759647, 0.67085077, 0.67085077, 0.67364017,
       0.67178057, 0.66945607, 0.67364017, 0.67364017, 0.67364017,
       0.50627615, 0.64249186, 0.62296606, 0.66713157, 0.67131567,
       0.67131567, 0.67178057, 0.67271037, 0.67271037, 0.67271037,
       0.67271037, 0.67271037, 0.73919107, 0.83217108, 0.82612738,
       0.82984658, 0.84518828, 0.85030219, 0.84239888, 0.84983728,
       0.84425848, 0.85030219, 0.84704788, 0.84611808, 0.81496978,
       0.83077638, 0.82845188, 0.81403998, 0.83821478, 0.83960948,
       0.83031148, 0.83496048, 0.83589028, 0.83542538, 0.84193398,
       0.84007438, 0.78382148, 0.86517899, 0.85634589, 0.88470479,
       0.89121339, 0.89260809, 0.90190609, 0.89911669, 0.89353789,
       0.90190609, 0.89121339, 0.88795909, 0.85681079, 0.86099489,
       0.86331939, 0.86238959, 0.88888889, 0.88609949, 0.86936309,
       0.87122269, 0.87587169, 0.87587169, 0.87587169, 0.87680149,
       0.64993026, 0.72896327, 0.72989307, 0.73454207, 0.74198047,
       0.74012087, 0.73593677, 0.74384007, 0.74430497, 0.73593677,
       0.74569967, 0.74430497, 0.73082287, 0.72896327, 0.72803347,
       0.73221757, 0.73407717, 0.73640167, 0.74058577, 0.74895397,
       0.74384007, 0.74384007, 0.75406788, 0.75174338, 0.66294747,
       0.73035797, 0.72989307, 0.73407717, 0.74151557, 0.73826127,
       0.74012087, 0.74151557, 0.74662947, 0.74476987, 0.74662947,
       0.74709437, 0.73872617, 0.73035797, 0.72896327, 0.73733147,
       0.73733147, 0.73593677, 0.74802417, 0.74662947, 0.74523477,
       0.74941887, 0.74941887, 0.74941887, 0.63737796, 0.72105997,
       0.71315667, 0.71641097, 0.71455137, 0.70757787, 0.70897257,
       0.70757787, 0.70618317, 0.71315667, 0.70943747, 0.70385867,
       0.70525337, 0.70897257, 0.71176197, 0.69409577, 0.70478847,
       0.70385867, 0.69827987, 0.70339377, 0.70199907, 0.70060437,
       0.70385867, 0.70153417, 0.63598326, 0.71827057, 0.70990237,
       0.70990237, 0.70339377, 0.70385867, 0.70432357, 0.70339377,
       0.70385867, 0.70478847, 0.70199907, 0.70153417, 0.70757787,
       0.70478847, 0.70478847, 0.69642027, 0.69781497, 0.69967457,
       0.69549047, 0.70013947, 0.70013947, 0.70153417, 0.69781497,
       0.69874477]), 'split5_train_score': array([0.53649465, 0.67828917, 0.67364017, 0.67085077, 0.67224547,
       0.67364017, 0.67364017, 0.67689447, 0.67456997, 0.67549977,
       0.67410507, 0.67085077, 0.67131567, 0.66992097, 0.67224547,
       0.67317527, 0.67596467, 0.67689447, 0.67178057, 0.67131567,
       0.67131567, 0.67131567, 0.67038587, 0.67085077, 0.53742445,
       0.67689447, 0.67503487, 0.67085077, 0.67642957, 0.67596467,
       0.67271037, 0.67596467, 0.67456997, 0.67131567, 0.67410507,
       0.67178057, 0.67178057, 0.67456997, 0.67224547, 0.67271037,
       0.67271037, 0.67456997, 0.67038587, 0.67271037, 0.67085077,
       0.67131567, 0.67085077, 0.67085077, 0.69827987, 0.71501627,
       0.71873547, 0.70478847, 0.71222687, 0.71129707, 0.70060437,
       0.70432357, 0.69920967, 0.69874477, 0.69456067, 0.69456067,
       0.72059507, 0.71920037, 0.72291957, 0.68712227, 0.70106927,
       0.70292887, 0.68665737, 0.68944677, 0.68991167, 0.68851697,
       0.69177127, 0.68898187, 0.72059507, 0.71687587, 0.72384937,
       0.70153417, 0.71222687, 0.71083217, 0.70850767, 0.69735007,
       0.69735007, 0.69595537, 0.69456067, 0.69270107, 0.72803347,
       0.72059507, 0.71966527, 0.68619247, 0.69642027, 0.69735007,
       0.68479777, 0.68665737, 0.69130637, 0.68386797, 0.68386797,
       0.68386797, 0.66062297, 0.67410507, 0.67456997, 0.65597397,
       0.67456997, 0.68061367, 0.67364017, 0.68386797, 0.68154347,
       0.67224547, 0.68340307, 0.68712227, 0.68014877, 0.67921897,
       0.65876337, 0.68665737, 0.67968387, 0.68014877, 0.68572757,
       0.68433287, 0.68758717, 0.68107857, 0.68247327, 0.68433287,
       0.66573687, 0.67317527, 0.67549977, 0.65876337, 0.67364017,
       0.67782427, 0.67456997, 0.68247327, 0.68247327, 0.67968387,
       0.68479777, 0.68433287, 0.68712227, 0.68154347, 0.66155277,
       0.68479777, 0.68293817, 0.68014877, 0.68898187, 0.68665737,
       0.68712227, 0.68526267, 0.68526267, 0.68526267, 0.50627615,
       0.50627615, 0.50953045, 0.62157136, 0.66806137, 0.67131567,
       0.65597397, 0.67549977, 0.67224547, 0.67224547, 0.67038587,
       0.67038587, 0.66759647, 0.62900976, 0.62668526, 0.67131567,
       0.67131567, 0.66945607, 0.67085077, 0.67178057, 0.67038587,
       0.67410507, 0.66806137, 0.66945607, 0.50627615, 0.50627615,
       0.50999535, 0.67131567, 0.67085077, 0.67038587, 0.66992097,
       0.67038587, 0.67085077, 0.66945607, 0.66899117, 0.66899117,
       0.50627615, 0.65550907, 0.64063226, 0.67085077, 0.66899117,
       0.66899117, 0.67038587, 0.66992097, 0.66992097, 0.66992097,
       0.66992097, 0.66992097, 0.74802417, 0.82287308, 0.82008368,
       0.82705718, 0.83728498, 0.84146908, 0.84658298, 0.84379358,
       0.83589028, 0.85123199, 0.83728498, 0.82984658, 0.81357508,
       0.82566248, 0.82333798, 0.82333798, 0.83403068, 0.83310088,
       0.82054858, 0.82194328, 0.82426778, 0.82287308, 0.82845188,
       0.82798698, 0.78568108, 0.86424919, 0.86099489, 0.87819619,
       0.89446769, 0.89493259, 0.90004649, 0.90004649, 0.89725709,
       0.90237099, 0.89214319, 0.88795909, 0.86099489, 0.85820549,
       0.86192469, 0.86471409, 0.88656439, 0.88423989, 0.87029289,
       0.87029289, 0.87494189, 0.87680149, 0.87819619, 0.87912599,
       0.65783357, 0.73128777, 0.73593677, 0.73268247, 0.73640167,
       0.73593677, 0.73593677, 0.74012087, 0.73872617, 0.73826127,
       0.73872617, 0.73826127, 0.72710367, 0.73221757, 0.73407717,
       0.73593677, 0.74151557, 0.73361227, 0.73919107, 0.73919107,
       0.73779637, 0.73686657, 0.74058577, 0.74058577, 0.65597397,
       0.73593677, 0.73361227, 0.73733147, 0.73221757, 0.73221757,
       0.73919107, 0.73826127, 0.73407717, 0.73779637, 0.73500697,
       0.73407717, 0.72663877, 0.72803347, 0.73268247, 0.73175267,
       0.73361227, 0.73221757, 0.73361227, 0.73454207, 0.73407717,
       0.73640167, 0.73640167, 0.73640167, 0.63970246, 0.71083217,
       0.71548117, 0.70850767, 0.71222687, 0.70897257, 0.71548117,
       0.71315667, 0.70804277, 0.71362157, 0.71501627, 0.70478847,
       0.70757787, 0.71548117, 0.71315667, 0.69223617, 0.70385867,
       0.70664807, 0.69781497, 0.69874477, 0.70060437, 0.69642027,
       0.69781497, 0.69967457, 0.63598326, 0.71594607, 0.71548117,
       0.70850767, 0.71408647, 0.71501627, 0.71222687, 0.70757787,
       0.70478847, 0.70897257, 0.70153417, 0.70013947, 0.70711297,
       0.71269177, 0.71176197, 0.69177127, 0.70478847, 0.70571827,
       0.69456067, 0.69456067, 0.69549047, 0.69549047, 0.69642027,
       0.69595537]), 'split6_train_score': array([0.53463505, 0.67968387, 0.67271037, 0.67549977, 0.67735937,
       0.67549977, 0.67875407, 0.67921897, 0.67689447, 0.67828917,
       0.67689447, 0.67596467, 0.67596467, 0.67503487, 0.67364017,
       0.67875407, 0.67968387, 0.68014877, 0.67503487, 0.67596467,
       0.67689447, 0.67596467, 0.67549977, 0.67642957, 0.54951185,
       0.67735937, 0.67549977, 0.67642957, 0.67875407, 0.67549977,
       0.67782427, 0.67782427, 0.67782427, 0.68014877, 0.67642957,
       0.67735937, 0.67271037, 0.67317527, 0.67317527, 0.67596467,
       0.68014877, 0.68061367, 0.67410507, 0.67456997, 0.67549977,
       0.67596467, 0.67828917, 0.67642957, 0.70897257, 0.72989307,
       0.72710367, 0.71176197, 0.71269177, 0.71269177, 0.70804277,
       0.70850767, 0.70664807, 0.70339377, 0.70339377, 0.70013947,
       0.72477917, 0.72524407, 0.72291957, 0.70060437, 0.71176197,
       0.70850767, 0.69781497, 0.69827987, 0.69595537, 0.69688517,
       0.69688517, 0.69688517, 0.71594607, 0.72059507, 0.72384937,
       0.71083217, 0.71083217, 0.71687587, 0.71129707, 0.70292887,
       0.70571827, 0.70850767, 0.69827987, 0.69874477, 0.72245467,
       0.72570897, 0.72245467, 0.69781497, 0.70664807, 0.70292887,
       0.69688517, 0.69781497, 0.69409577, 0.68758717, 0.68758717,
       0.68758717, 0.67038587, 0.68014877, 0.67642957, 0.66759647,
       0.68014877, 0.68200837, 0.68340307, 0.68572757, 0.68898187,
       0.68898187, 0.68572757, 0.68991167, 0.68526267, 0.69177127,
       0.67317527, 0.68851697, 0.68386797, 0.68293817, 0.68898187,
       0.69130637, 0.68944677, 0.68805207, 0.69456067, 0.69177127,
       0.66852627, 0.67875407, 0.67549977, 0.66713157, 0.67689447,
       0.68154347, 0.68479777, 0.68479777, 0.68619247, 0.68619247,
       0.68526267, 0.68805207, 0.68712227, 0.68805207, 0.67178057,
       0.68340307, 0.68572757, 0.68107857, 0.68665737, 0.68479777,
       0.68572757, 0.69270107, 0.69270107, 0.69270107, 0.50627615,
       0.50627615, 0.53602975, 0.58437936, 0.67782427, 0.68014877,
       0.65783357, 0.67689447, 0.67735937, 0.67875407, 0.67317527,
       0.67782427, 0.50627615, 0.64667596, 0.63923756, 0.67828917,
       0.67782427, 0.67735937, 0.67828917, 0.67503487, 0.67364017,
       0.67596467, 0.67317527, 0.67456997, 0.54067875, 0.56485356,
       0.57229196, 0.67921897, 0.67828917, 0.67689447, 0.67596467,
       0.67735937, 0.67828917, 0.67596467, 0.67642957, 0.67596467,
       0.50627615, 0.66015807, 0.65178987, 0.67782427, 0.67642957,
       0.67642957, 0.67782427, 0.67549977, 0.67549977, 0.67549977,
       0.67549977, 0.67549977, 0.75174338, 0.83310088, 0.82380288,
       0.83217108, 0.83821478, 0.84658298, 0.84611808, 0.84472338,
       0.83960948, 0.84937238, 0.83682008, 0.83682008, 0.80613668,
       0.82240818, 0.81961878, 0.81543468, 0.83217108, 0.83170618,
       0.82659228, 0.82752208, 0.83077638, 0.82891678, 0.83449558,
       0.83217108, 0.77638308, 0.86471409, 0.85774059, 0.87401209,
       0.88749419, 0.88749419, 0.89260809, 0.88842399, 0.88609949,
       0.89307299, 0.87959089, 0.87773129, 0.84658298, 0.85262669,
       0.85681079, 0.85867039, 0.87959089, 0.88005579, 0.86145979,
       0.86843329, 0.87029289, 0.87122269, 0.87215249, 0.87215249,
       0.65690377, 0.74198047, 0.73361227, 0.73268247, 0.73733147,
       0.74151557, 0.74476987, 0.74384007, 0.74058577, 0.74198047,
       0.73779637, 0.74058577, 0.73361227, 0.72989307, 0.72710367,
       0.73640167, 0.73919107, 0.73314737, 0.74941887, 0.74848907,
       0.74012087, 0.75081358, 0.74476987, 0.74105067, 0.66108787,
       0.73314737, 0.73035797, 0.72849837, 0.72849837, 0.73175267,
       0.74105067, 0.73640167, 0.73779637, 0.73965597, 0.73919107,
       0.73779637, 0.73361227, 0.72896327, 0.72803347, 0.72942817,
       0.73361227, 0.73221757, 0.74012087, 0.73175267, 0.73314737,
       0.74569967, 0.74569967, 0.74569967, 0.64900046, 0.72013017,
       0.71594607, 0.71966527, 0.71594607, 0.71501627, 0.71594607,
       0.71455137, 0.71362157, 0.72198977, 0.71362157, 0.71222687,
       0.70990237, 0.71129707, 0.70897257, 0.70292887, 0.70711297,
       0.71083217, 0.70246397, 0.70478847, 0.70525337, 0.70850767,
       0.70618317, 0.70525337, 0.64295676, 0.71362157, 0.71455137,
       0.71780567, 0.71408647, 0.71222687, 0.71129707, 0.71362157,
       0.71036727, 0.71083217, 0.71036727, 0.70711297, 0.70990237,
       0.71036727, 0.71036727, 0.70153417, 0.70804277, 0.71129707,
       0.70339377, 0.70153417, 0.70292887, 0.70339377, 0.70292887,
       0.70292887]), 'mean_train_score': array([0.53088833, 0.6787562 , 0.67623218, 0.67550125, 0.67663082,
       0.67609929, 0.67908898, 0.67775995, 0.67643145, 0.67722867,
       0.67656428, 0.6751032 , 0.67450513, 0.67490383, 0.67543533,
       0.67623227, 0.67689638, 0.67782643, 0.67364171, 0.67423959,
       0.67463811, 0.6751697 , 0.67443896, 0.67457167, 0.53832889,
       0.67915527, 0.67682994, 0.67576719, 0.67862356, 0.67729512,
       0.67789328, 0.67736159, 0.67683   , 0.67782671, 0.67709584,
       0.67536882, 0.67377448, 0.67463808, 0.67536876, 0.67563457,
       0.67683009, 0.67736159, 0.67457173, 0.67417324, 0.67483748,
       0.67530253, 0.67536885, 0.67503678, 0.7083177 , 0.72200123,
       0.7240606 , 0.70399857, 0.71110666, 0.71104037, 0.70326798,
       0.70652337, 0.70499587, 0.70034489, 0.701608  , 0.7009441 ,
       0.71648668, 0.72080503, 0.72120324, 0.69609465, 0.70506197,
       0.70532769, 0.69376963, 0.69343762, 0.69237465, 0.68951757,
       0.69197549, 0.69250714, 0.71675302, 0.71941018, 0.72279811,
       0.70758603, 0.70911374, 0.71077434, 0.70698839, 0.70280398,
       0.70473049, 0.70552749, 0.69815384, 0.69981478, 0.72459154,
       0.72239966, 0.71874557, 0.69516489, 0.70247148, 0.70240506,
       0.69403581, 0.69396924, 0.69330482, 0.69051496, 0.69051496,
       0.69051496, 0.66294716, 0.67536882, 0.67357539, 0.66175077,
       0.67450507, 0.67942093, 0.67596649, 0.6834727 , 0.68380495,
       0.67988586, 0.6817454 , 0.68440265, 0.68573168, 0.68380526,
       0.66148533, 0.68626302, 0.68001884, 0.68041745, 0.68480123,
       0.68579772, 0.68593043, 0.67928733, 0.68353877, 0.68234307,
       0.66307962, 0.67304386, 0.67237978, 0.66281417, 0.67291112,
       0.67835793, 0.67623168, 0.68373872, 0.68413724, 0.68141311,
       0.68274195, 0.68446925, 0.68646245, 0.68347341, 0.6607544 ,
       0.68373903, 0.68187878, 0.67988608, 0.68593101, 0.68546587,
       0.68380501, 0.68360518, 0.68360518, 0.68360518, 0.50617773,
       0.51395182, 0.53507879, 0.61451878, 0.67297828, 0.6751694 ,
       0.67258091, 0.67656456, 0.67497024, 0.67968683, 0.67443918,
       0.67457173, 0.61552479, 0.63146626, 0.61871079, 0.67430604,
       0.67656487, 0.67437264, 0.673708  , 0.67490399, 0.67390752,
       0.67782677, 0.67576777, 0.67563497, 0.51747113, 0.53554261,
       0.53673788, 0.67297735, 0.67390743, 0.67397388, 0.67689691,
       0.6741729 , 0.6731766 , 0.67683049, 0.67669763, 0.67669767,
       0.50617773, 0.6569029 , 0.64248844, 0.67251242, 0.67550205,
       0.6755685 , 0.67417293, 0.67689703, 0.67689703, 0.67689703,
       0.67689703, 0.67689703, 0.7420615 , 0.83140723, 0.82602727,
       0.82595918, 0.84389611, 0.84774842, 0.84362946, 0.84881185,
       0.84396262, 0.8485452 , 0.84289974, 0.84037544, 0.81147892,
       0.82277034, 0.8248307 , 0.82084581, 0.83731964, 0.83917998,
       0.82715603, 0.83147444, 0.83366673, 0.83227163, 0.83692122,
       0.83585862, 0.77593903, 0.86249477, 0.85864255, 0.87930145,
       0.89046121, 0.89318524, 0.89810067, 0.89830029, 0.89590906,
       0.90035956, 0.89205642, 0.88959872, 0.85638422, 0.85824425,
       0.86090101, 0.86442223, 0.88660887, 0.88614416, 0.87020164,
       0.87717718, 0.8799005 , 0.88009981, 0.8803654 , 0.880166  ,
       0.65736746, 0.73342625, 0.73296083, 0.73136639, 0.73967099,
       0.73993664, 0.73907298, 0.743457  , 0.74232784, 0.74332495,
       0.74405547, 0.74312509, 0.72977214, 0.72904161, 0.7278456 ,
       0.73442265, 0.73654791, 0.73488783, 0.74465292, 0.74697783,
       0.74359011, 0.74677864, 0.75083081, 0.75043264, 0.65803108,
       0.73196452, 0.73063614, 0.733958  , 0.735818  , 0.73595064,
       0.7398032 , 0.74006923, 0.7419957 , 0.74545039, 0.7433909 ,
       0.74319172, 0.73608366, 0.72950697, 0.72738073, 0.7333595 ,
       0.73515339, 0.73495418, 0.74305876, 0.7419296 , 0.7417302 ,
       0.7459818 , 0.7459818 , 0.7459818 , 0.63551114, 0.71947666,
       0.71575653, 0.71396263, 0.71482651, 0.7136313 , 0.71223595,
       0.7122358 , 0.71044264, 0.71363059, 0.71196986, 0.70838346,
       0.70911389, 0.71024226, 0.70851521, 0.69875141, 0.70632397,
       0.70685531, 0.69914968, 0.70379998, 0.70399931, 0.70286999,
       0.70373347, 0.70260412, 0.63265514, 0.7176165 , 0.71495956,
       0.70957818, 0.71177077, 0.7112394 , 0.70964536, 0.70898107,
       0.70838349, 0.7101768 , 0.70619129, 0.70512873, 0.70805108,
       0.70871491, 0.70718683, 0.69928303, 0.70379961, 0.70419794,
       0.69722333, 0.69994708, 0.70114297, 0.69994675, 0.6987512 ,
       0.69928269]), 'std_train_score': array([0.01022367, 0.00362052, 0.00333597, 0.0036717 , 0.00361513,
       0.00277523, 0.00290411, 0.00175876, 0.00207915, 0.00184452,
       0.00250652, 0.00244978, 0.00292746, 0.00238058, 0.00279538,
       0.00200691, 0.00261441, 0.00210896, 0.00211911, 0.00303173,
       0.00276927, 0.00220169, 0.00302844, 0.00305464, 0.00777626,
       0.00329333, 0.00299713, 0.00375402, 0.0030549 , 0.00210058,
       0.00331497, 0.00242777, 0.00223307, 0.00320294, 0.00233434,
       0.0023016 , 0.00189371, 0.00152141, 0.00270457, 0.0020612 ,
       0.00250719, 0.00284894, 0.0023629 , 0.0027657 , 0.00284756,
       0.00311046, 0.00344786, 0.00335073, 0.00639219, 0.00660514,
       0.00511084, 0.00413085, 0.00440249, 0.00468721, 0.00395867,
       0.0036248 , 0.00406038, 0.00312365, 0.00552101, 0.00459887,
       0.0051924 , 0.00205542, 0.00241802, 0.00503789, 0.00425993,
       0.00409705, 0.0040496 , 0.00599201, 0.00447064, 0.00622112,
       0.00414047, 0.00354967, 0.00299629, 0.00323397, 0.00451241,
       0.0040707 , 0.00442394, 0.00328583, 0.00620609, 0.00501002,
       0.00561248, 0.00589639, 0.00440654, 0.0043707 , 0.00425373,
       0.00413817, 0.00427492, 0.00508027, 0.00439534, 0.00380407,
       0.005813  , 0.00571578, 0.00624789, 0.00459433, 0.00459433,
       0.00459433, 0.00484855, 0.00340581, 0.0041606 , 0.00562178,
       0.0051271 , 0.0043408 , 0.00546043, 0.00374561, 0.00271208,
       0.0066579 , 0.00437018, 0.00455182, 0.00349009, 0.00541653,
       0.00574702, 0.00401789, 0.00454858, 0.00492604, 0.00238284,
       0.00344742, 0.00265419, 0.0052813 , 0.00618796, 0.00522812,
       0.00374753, 0.00433906, 0.00448832, 0.00384275, 0.00582383,
       0.00343003, 0.00621602, 0.00368307, 0.00321516, 0.00537881,
       0.00460712, 0.00332323, 0.0031611 , 0.00489417, 0.00535386,
       0.00411671, 0.00463149, 0.0045455 , 0.00387524, 0.00287391,
       0.00289269, 0.00580248, 0.00580248, 0.00580248, 0.00011364,
       0.01342962, 0.03540893, 0.03370953, 0.00842819, 0.00364219,
       0.01175325, 0.00232912, 0.00214492, 0.00431547, 0.00254896,
       0.00238872, 0.07282566, 0.03622155, 0.03977989, 0.00335842,
       0.00294651, 0.00291561, 0.00339396, 0.00195926, 0.00187519,
       0.00337551, 0.00393775, 0.00348457, 0.01804607, 0.04097434,
       0.04216601, 0.00357452, 0.00266393, 0.00232365, 0.00418935,
       0.00277191, 0.00317321, 0.00430159, 0.00427101, 0.00434046,
       0.00011364, 0.00771036, 0.01180873, 0.00300492, 0.00392055,
       0.00401479, 0.00253528, 0.00443796, 0.00443796, 0.00443796,
       0.00443796, 0.00443796, 0.00555753, 0.00397841, 0.00528453,
       0.00442978, 0.00460096, 0.003234  , 0.00288155, 0.00452208,
       0.00526931, 0.00370254, 0.0051905 , 0.00584243, 0.00341061,
       0.00531492, 0.00394736, 0.00623303, 0.00410665, 0.00632304,
       0.00347162, 0.0065002 , 0.00707354, 0.00622606, 0.00549305,
       0.00600338, 0.0076777 , 0.00252023, 0.0029248 , 0.00447282,
       0.00372945, 0.00525686, 0.00545555, 0.00593918, 0.00581348,
       0.00662754, 0.00727396, 0.00727793, 0.00531854, 0.00407386,
       0.0034646 , 0.00620603, 0.00444611, 0.00481307, 0.00581388,
       0.00842136, 0.00744877, 0.00734701, 0.00693492, 0.00675637,
       0.00599264, 0.0049169 , 0.00463743, 0.00368398, 0.00503012,
       0.00339152, 0.00408227, 0.00193667, 0.00271809, 0.00457195,
       0.00404367, 0.00263044, 0.00475065, 0.00388367, 0.00615899,
       0.00393211, 0.00444118, 0.00288399, 0.00369105, 0.00368717,
       0.00353032, 0.00455995, 0.00544232, 0.00642702, 0.00451431,
       0.0043224 , 0.00423139, 0.00340114, 0.00505724, 0.00433962,
       0.00252659, 0.00243224, 0.00467288, 0.0053496 , 0.00433131,
       0.00484575, 0.00474709, 0.00290775, 0.00414322, 0.00528626,
       0.00459925, 0.00372692, 0.00458335, 0.00575036, 0.00562458,
       0.00470381, 0.00470381, 0.00470381, 0.00664267, 0.00645673,
       0.00461344, 0.00684573, 0.00317057, 0.0040145 , 0.00410953,
       0.00334186, 0.00309878, 0.00373186, 0.00273743, 0.00328282,
       0.00231035, 0.00516908, 0.00481322, 0.00401439, 0.00428531,
       0.00396845, 0.00320655, 0.00323925, 0.00253693, 0.00526002,
       0.00309442, 0.00252556, 0.00702341, 0.00337479, 0.00386857,
       0.00570705, 0.00454904, 0.00423397, 0.00373663, 0.00401366,
       0.0034367 , 0.00454742, 0.00371145, 0.00328201, 0.00150688,
       0.00344702, 0.00478535, 0.0050038 , 0.00450432, 0.00479435,
       0.00353582, 0.00335737, 0.003624  , 0.00299019, 0.00229182,
       0.0026833 ])}
0.6823435631725787
BaggingClassifier(base_estimator=RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=10, max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=None,
            oob_score=False, random_state=5, verbose=0, warm_start=False),
         bootstrap=True, bootstrap_features=False, max_features=1.0,
         max_samples=1.0, n_estimators=50, n_jobs=None, oob_score=False,
         random_state=5, verbose=0, warm_start=False)